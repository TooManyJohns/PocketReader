{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar util_1 = require(\"util\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.topKConfig = {\n  kernelName: tfjs_1.TopK,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n        k = _a.k,\n        sorted = _a.sorted;\n    var kCount = util_1.isNullOrUndefined(k) ? 1 : k;\n    var isSorted = util_1.isNullOrUndefined(sorted) ? true : sorted;\n    var opAttrs = [{\n      name: 'sorted',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: isSorted\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype)];\n    var kTensor = tfjs_1.scalar(kCount, 'int32'); // 'TopKV2' has two-hard coded output attributes:\n    // TODO(yassogba) consider renamine constant in kernel names;\n\n    var res = backend.executeMultipleOutputs('TopKV2', opAttrs, [x, kTensor], 2);\n    kTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/TopK.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","util_1","nodejs_kernel_backend_1","topKConfig","kernelName","TopK","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","k","sorted","kCount","isNullOrUndefined","isSorted","opAttrs","name","type","binding","TF_ATTR_BOOL","createTensorsTypeOpAttr","dtype","kTensor","scalar","res","executeMultipleOutputs","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACM,UAAR,GAAqB;AACjBC,EAAAA,UAAU,EAAEL,MAAM,CAACM,IADF;AAEjBC,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAd;AAAA,QAAqBC,CAAC,GAAGF,EAAE,CAACE,CAA5B;AAAA,QAA+BC,MAAM,GAAGH,EAAE,CAACG,MAA3C;AACA,QAAIC,MAAM,GAAGf,MAAM,CAACgB,iBAAP,CAAyBH,CAAzB,IAA8B,CAA9B,GAAkCA,CAA/C;AACA,QAAII,QAAQ,GAAGjB,MAAM,CAACgB,iBAAP,CAAyBF,MAAzB,IAAmC,IAAnC,GAA0CA,MAAzD;AACA,QAAII,OAAO,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAEV,OAAO,CAACW,OAAR,CAAgBC,YAAxC;AAAsDzB,MAAAA,KAAK,EAAEoB;AAA7D,KADU,EAEVhB,uBAAuB,CAACsB,uBAAxB,CAAgD,GAAhD,EAAqDf,CAAC,CAACgB,KAAvD,CAFU,CAAd;AAIA,QAAIC,OAAO,GAAG3B,MAAM,CAAC4B,MAAP,CAAcX,MAAd,EAAsB,OAAtB,CAAd,CAVwB,CAWxB;AACA;;AACA,QAAIY,GAAG,GAAGjB,OAAO,CAACkB,sBAAR,CAA+B,QAA/B,EAAyCV,OAAzC,EAAkD,CAACV,CAAD,EAAIiB,OAAJ,CAAlD,EAAgE,CAAhE,CAAV;AACAA,IAAAA,OAAO,CAACI,OAAR;AACA,WAAOF,GAAP;AACH;AAnBgB,CAArB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar util_1 = require(\"util\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.topKConfig = {\n    kernelName: tfjs_1.TopK,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, k = _a.k, sorted = _a.sorted;\n        var kCount = util_1.isNullOrUndefined(k) ? 1 : k;\n        var isSorted = util_1.isNullOrUndefined(sorted) ? true : sorted;\n        var opAttrs = [\n            { name: 'sorted', type: backend.binding.TF_ATTR_BOOL, value: isSorted },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n        ];\n        var kTensor = tfjs_1.scalar(kCount, 'int32');\n        // 'TopKV2' has two-hard coded output attributes:\n        // TODO(yassogba) consider renamine constant in kernel names;\n        var res = backend.executeMultipleOutputs('TopKV2', opAttrs, [x, kTensor], 2);\n        kTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}