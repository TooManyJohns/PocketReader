{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { getAllPokemon } from '../../services/PokemonService';\n\nconst HomeScreen = () => {\n  _s();\n\n  const [pokemonList, setPokemonList] = useState([]); // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon\n\n  useEffect(() => {\n    let mounted = true;\n    getAllPokemon().then(items => {\n      if (mounted) {\n        console.log(items);\n        setPokemonList(items);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: /*#__PURE__*/_jsxDEV(DivOne, {\n      children: /*#__PURE__*/_jsxDEV(DivTwo, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemonList[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomeScreen, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Background;\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DivOne;\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`;\n_c4 = DivTwo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"DivOne\");\n$RefreshReg$(_c4, \"DivTwo\");","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js"],"names":["React","useState","useEffect","styled","getAllPokemon","HomeScreen","pokemonList","setPokemonList","mounted","then","items","console","log","Background","div","DivOne","DivTwo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,+BAA9B;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CADuB,CAGvB;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAO,GAAG,IAAd;AACAJ,IAAAA,aAAa,GACVK,IADH,CACQC,KAAK,IAAI;AACb,UAAGF,OAAH,EAAY;AACVG,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,QAAAA,cAAc,CAACG,KAAD,CAAd;AACD;AACF,KANH;AAOA,WAAO,MAAMF,OAAO,GAAG,KAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAaE,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAA,oBAAIF,WAAW,CAAC,CAAD;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5BH;;GAAMD,U;;KAAAA,U;AA8BJ,eAAeA,UAAf;AAGF,MAAMQ,UAAU,GAAGV,MAAM,CAACW,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U;AAYN,MAAME,MAAM,GAAGZ,MAAM,CAACW,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,M;AAYN,MAAMC,MAAM,GAAGb,MAAM,CAACW,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,M","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\n\nimport { getAllPokemon } from '../../services/PokemonService'\n\n\nconst HomeScreen = () => {\n  const [pokemonList, setPokemonList] = useState([]);\n\n  // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon\n  useEffect(() => {\n    let mounted = true;\n    getAllPokemon()\n      .then(items => {\n        if(mounted) {\n          console.log(items)\n          setPokemonList(items)\n        }\n      })\n    return () => mounted = false;\n  }, [])\n \n\n    return (\n      <Background>\n        <DivOne>        \n          <DivTwo>  \n            <p>{pokemonList[0]}</p>\n          </DivTwo>\n        </DivOne>\n      </Background>\n    );\n  }\n\n  export default HomeScreen;\n\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`\n\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`\n"]},"metadata":{},"sourceType":"module"}