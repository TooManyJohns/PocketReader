{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.resizeNearestNeighborGradConfig = {\n  kernelName: tfjs_1.ResizeNearestNeighborGrad,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        images = _a.images,\n        dy = _a.dy;\n    var backend = args.backend;\n    var alignCorners = args.attrs.alignCorners;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', images.dtype), {\n      name: 'align_corners',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: alignCorners\n    }];\n    var _b = images.shape,\n        origHeight = _b[1],\n        origWidth = _b[2];\n    var sizeTensor = tfjs_1.tensor1d([origHeight, origWidth], 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.ResizeNearestNeighborGrad, opAttrs, [dy, sizeTensor]);\n    sizeTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/ResizeNearestNeighborGrad.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","resizeNearestNeighborGradConfig","kernelName","ResizeNearestNeighborGrad","backendName","kernelFunc","args","_a","inputs","images","dy","backend","alignCorners","attrs","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_BOOL","_b","shape","origHeight","origWidth","sizeTensor","tensor1d","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,+BAAR,GAA0C;AACtCC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,yBADmB;AAEtCC,EAAAA,WAAW,EAAE,YAFyB;AAGtCC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,MAAM,GAAGF,EAAE,CAACE,MAAlC;AAAA,QAA0CC,EAAE,GAAGH,EAAE,CAACG,EAAlD;AACA,QAAIC,OAAO,GAAGL,IAAI,CAACK,OAAnB;AACA,QAAIC,YAAY,GAAGN,IAAI,CAACO,KAAL,CAAWD,YAA9B;AACA,QAAIE,OAAO,GAAG,CACVd,uBAAuB,CAACe,uBAAxB,CAAgD,GAAhD,EAAqDN,MAAM,CAACO,KAA5D,CADU,EAC0D;AAChEC,MAAAA,IAAI,EAAE,eAD0D;AAEhEC,MAAAA,IAAI,EAAEP,OAAO,CAACQ,OAAR,CAAgBC,YAF0C;AAGhEvB,MAAAA,KAAK,EAAEe;AAHyD,KAD1D,CAAd;AAOA,QAAIS,EAAE,GAAGZ,MAAM,CAACa,KAAhB;AAAA,QAAuBC,UAAU,GAAGF,EAAE,CAAC,CAAD,CAAtC;AAAA,QAA2CG,SAAS,GAAGH,EAAE,CAAC,CAAD,CAAzD;AACA,QAAII,UAAU,GAAG3B,MAAM,CAAC4B,QAAP,CAAgB,CAACH,UAAD,EAAaC,SAAb,CAAhB,EAAyC,OAAzC,CAAjB;AACA,QAAIG,GAAG,GAAGhB,OAAO,CAACiB,mBAAR,CAA4B9B,MAAM,CAACK,yBAAnC,EAA8DW,OAA9D,EAAuE,CAACJ,EAAD,EAAKe,UAAL,CAAvE,CAAV;AACAA,IAAAA,UAAU,CAACI,OAAX;AACA,WAAOF,GAAP;AACH;AAnBqC,CAA1C","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.resizeNearestNeighborGradConfig = {\n    kernelName: tfjs_1.ResizeNearestNeighborGrad,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, images = _a.images, dy = _a.dy;\n        var backend = args.backend;\n        var alignCorners = args.attrs.alignCorners;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', images.dtype), {\n                name: 'align_corners',\n                type: backend.binding.TF_ATTR_BOOL,\n                value: alignCorners\n            }\n        ];\n        var _b = images.shape, origHeight = _b[1], origWidth = _b[2];\n        var sizeTensor = tfjs_1.tensor1d([origHeight, origWidth], 'int32');\n        var res = backend.executeSingleOutput(tfjs_1.ResizeNearestNeighborGrad, opAttrs, [dy, sizeTensor]);\n        sizeTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}