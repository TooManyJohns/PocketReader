{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.complexConfig = {\n  kernelName: tfjs_1.Complex,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        real = _a.real,\n        imag = _a.imag;\n    var backend = args.backend;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', real), {\n      name: 'Tout',\n      type: backend.binding.TF_ATTR_TYPE,\n      value: backend.binding.TF_COMPLEX64\n    }];\n    var inputs = [real, imag];\n    return backend.executeSingleOutput(tfjs_1.Complex, opAttrs, inputs);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Complex.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","complexConfig","kernelName","Complex","backendName","kernelFunc","args","_a","inputs","real","imag","backend","opAttrs","createTensorsTypeOpAttr","name","type","binding","TF_ATTR_TYPE","TF_COMPLEX64","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,aAAR,GAAwB;AACpBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,OADC;AAEpBC,EAAAA,WAAW,EAAE,YAFO;AAGpBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,IAAI,GAAGF,EAAE,CAACE,IAAhC;AAAA,QAAsCC,IAAI,GAAGH,EAAE,CAACG,IAAhD;AACA,QAAIC,OAAO,GAAGL,IAAI,CAACK,OAAnB;AACA,QAAIC,OAAO,GAAG,CACVZ,uBAAuB,CAACa,uBAAxB,CAAgD,GAAhD,EAAqDJ,IAArD,CADU,EAEV;AACIK,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,IAAI,EAAEJ,OAAO,CAACK,OAAR,CAAgBC,YAF1B;AAGIpB,MAAAA,KAAK,EAAEc,OAAO,CAACK,OAAR,CAAgBE;AAH3B,KAFU,CAAd;AAQA,QAAIV,MAAM,GAAG,CAACC,IAAD,EAAOC,IAAP,CAAb;AACA,WAAOC,OAAO,CAACQ,mBAAR,CAA4BrB,MAAM,CAACK,OAAnC,EAA4CS,OAA5C,EAAqDJ,MAArD,CAAP;AACH;AAhBmB,CAAxB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.complexConfig = {\n    kernelName: tfjs_1.Complex,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, real = _a.real, imag = _a.imag;\n        var backend = args.backend;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', real),\n            {\n                name: 'Tout',\n                type: backend.binding.TF_ATTR_TYPE,\n                value: backend.binding.TF_COMPLEX64\n            },\n        ];\n        var inputs = [real, imag];\n        return backend.executeSingleOutput(tfjs_1.Complex, opAttrs, inputs);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}