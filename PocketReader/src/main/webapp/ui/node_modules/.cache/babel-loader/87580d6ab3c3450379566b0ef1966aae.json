{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.conv2DBackpropFilterConfig = {\n  kernelName: tfjs_1.Conv2DBackpropFilter,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        x = _a.x,\n        dy = _a.dy;\n    var backend = args.backend;\n    var _b = args.attrs,\n        strides = _b.strides,\n        pad = _b.pad,\n        dataFormat = _b.dataFormat,\n        dimRoundingMode = _b.dimRoundingMode,\n        filterShape = _b.filterShape;\n    var $dataFormat = tfjs_1.backend_util.convertConv2DDataFormat(dataFormat);\n    var convInfo = tfjs_1.backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1\n    /* dilations */\n    , pad, dimRoundingMode, false\n    /* depthwise */\n    , $dataFormat);\n    return conv2DBackpropFilterImpl(dy, x, convInfo, backend);\n  }\n};\n\nfunction conv2DBackpropFilterImpl(dy, filter, convInfo, backend) {\n  if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n    throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" + (\"while padding was \" + convInfo.padInfo.type));\n  }\n\n  var strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n  var padding = convInfo.padInfo.type;\n  var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n  var dilations = [1, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n  var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'), {\n    name: 'strides',\n    type: backend.binding.TF_ATTR_INT,\n    value: strides\n  }, {\n    name: 'padding',\n    type: backend.binding.TF_ATTR_STRING,\n    value: padding\n  }, {\n    name: 'data_format',\n    type: backend.binding.TF_ATTR_STRING,\n    value: dataFormat\n  }, {\n    name: 'use_cudnn_on_gpu',\n    type: backend.binding.TF_ATTR_BOOL,\n    value: true\n  }, {\n    name: 'dilations',\n    type: backend.binding.TF_ATTR_INT,\n    value: dilations\n  }];\n  var filterSizes = tfjs_1.tensor1d(convInfo.filterShape, 'int32');\n  var res = backend.executeSingleOutput(tfjs_1.Conv2DBackpropFilter, opAttrs, [filter, filterSizes, dy]);\n  filterSizes.dispose();\n  return res;\n}","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Conv2DBackpropFilter.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","conv2DBackpropFilterConfig","kernelName","Conv2DBackpropFilter","backendName","kernelFunc","args","_a","inputs","x","dy","backend","_b","attrs","strides","pad","dataFormat","dimRoundingMode","filterShape","$dataFormat","backend_util","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","conv2DBackpropFilterImpl","filter","padInfo","type","Error","strideHeight","strideWidth","padding","dilations","dilationHeight","dilationWidth","opAttrs","createTensorsTypeOpAttr","name","binding","TF_ATTR_INT","TF_ATTR_STRING","TF_ATTR_BOOL","filterSizes","tensor1d","res","executeSingleOutput","dispose"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.conv2DBackpropFilterConfig = {\n    kernelName: tfjs_1.Conv2DBackpropFilter,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, x = _a.x, dy = _a.dy;\n        var backend = args.backend;\n        var _b = args.attrs, strides = _b.strides, pad = _b.pad, dataFormat = _b.dataFormat, dimRoundingMode = _b.dimRoundingMode, filterShape = _b.filterShape;\n        var $dataFormat = tfjs_1.backend_util.convertConv2DDataFormat(dataFormat);\n        var convInfo = tfjs_1.backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n        return conv2DBackpropFilterImpl(dy, x, convInfo, backend);\n    }\n};\nfunction conv2DBackpropFilterImpl(dy, filter, convInfo, backend) {\n    if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n        throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" +\n            (\"while padding was \" + convInfo.padInfo.type));\n    }\n    var strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n    var dilations = [1, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n    var opAttrs = [\n        nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'),\n        { name: 'strides', type: backend.binding.TF_ATTR_INT, value: strides },\n        { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding }, {\n            name: 'data_format',\n            type: backend.binding.TF_ATTR_STRING,\n            value: dataFormat\n        },\n        { name: 'use_cudnn_on_gpu', type: backend.binding.TF_ATTR_BOOL, value: true },\n        { name: 'dilations', type: backend.binding.TF_ATTR_INT, value: dilations }\n    ];\n    var filterSizes = tfjs_1.tensor1d(convInfo.filterShape, 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.Conv2DBackpropFilter, opAttrs, [filter, filterSizes, dy]);\n    filterSizes.dispose();\n    return res;\n}\n"]},"metadata":{},"sourceType":"script"}