{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.depthToSpaceConfig = {\n  kernelName: tfjs_1.DepthToSpace,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n        blockSize = _a.blockSize,\n        dataFormat = _a.dataFormat;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x), {\n      name: 'block_size',\n      type: backend.binding.TF_ATTR_INT,\n      value: blockSize < 2 ? 2 : blockSize\n    }, {\n      name: 'data_format',\n      type: backend.binding.TF_ATTR_STRING,\n      value: dataFormat\n    }];\n    var inputs = [x];\n    return backend.executeSingleOutput(tfjs_1.DepthToSpace, opAttrs, inputs);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/DepthToSpace.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","depthToSpaceConfig","kernelName","DepthToSpace","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","blockSize","dataFormat","opAttrs","createTensorsTypeOpAttr","name","type","binding","TF_ATTR_INT","TF_ATTR_STRING","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,kBAAR,GAA6B;AACzBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,YADM;AAEzBC,EAAAA,WAAW,EAAE,YAFY;AAGzBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAd;AAAA,QAAqBC,SAAS,GAAGF,EAAE,CAACE,SAApC;AAAA,QAA+CC,UAAU,GAAGH,EAAE,CAACG,UAA/D;AACA,QAAIC,OAAO,GAAG,CACVd,uBAAuB,CAACe,uBAAxB,CAAgD,GAAhD,EAAqDR,CAArD,CADU,EAC+C;AACrDS,MAAAA,IAAI,EAAE,YAD+C;AAErDC,MAAAA,IAAI,EAAER,OAAO,CAACS,OAAR,CAAgBC,WAF+B;AAGrDtB,MAAAA,KAAK,EAAEe,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoBA;AAH0B,KAD/C,EAMV;AACII,MAAAA,IAAI,EAAE,aADV;AAEIC,MAAAA,IAAI,EAAER,OAAO,CAACS,OAAR,CAAgBE,cAF1B;AAGIvB,MAAAA,KAAK,EAAEgB;AAHX,KANU,CAAd;AAYA,QAAIL,MAAM,GAAG,CAACD,CAAD,CAAb;AACA,WAAOE,OAAO,CAACY,mBAAR,CAA4BvB,MAAM,CAACK,YAAnC,EAAiDW,OAAjD,EAA0DN,MAA1D,CAAP;AACH;AArBwB,CAA7B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.depthToSpaceConfig = {\n    kernelName: tfjs_1.DepthToSpace,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, blockSize = _a.blockSize, dataFormat = _a.dataFormat;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x), {\n                name: 'block_size',\n                type: backend.binding.TF_ATTR_INT,\n                value: blockSize < 2 ? 2 : blockSize\n            },\n            {\n                name: 'data_format',\n                type: backend.binding.TF_ATTR_STRING,\n                value: dataFormat\n            }\n        ];\n        var inputs = [x];\n        return backend.executeSingleOutput(tfjs_1.DepthToSpace, opAttrs, inputs);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}