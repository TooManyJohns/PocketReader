{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectDetectionModel = exports.ClassificationModel = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Model = /*#__PURE__*/function () {\n  function Model() {\n    (0, _classCallCheck2.default)(this, Model);\n    this.NEW_OD_OUTPUT_TENSORS = ['detected_boxes', 'detected_scores', 'detected_classes'];\n  }\n\n  (0, _createClass2.default)(Model, [{\n    key: \"loadModelAsync\",\n    value: function () {\n      var _loadModelAsync = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(modelUrl) {\n        var options,\n            _args = arguments;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n                _context.next = 3;\n                return tf.loadGraphModel(modelUrl, options);\n\n              case 3:\n                this.model = _context.sent;\n                this.input_size = this.model.inputs[0].shape[1];\n                this.is_new_od_model = this.model.outputs.length == 3;\n                this.is_rgb_input = this.model.metadata && this.model.metadata['Image.BitmapPixelFormat'] == 'Rgb8' || this.is_new_od_model;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadModelAsync(_x) {\n        return _loadModelAsync.apply(this, arguments);\n      }\n\n      return loadModelAsync;\n    }()\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.model.dispose();\n    }\n  }, {\n    key: \"executeAsync\",\n    value: function () {\n      var _executeAsync = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(pixels) {\n        var _this = this;\n\n        var inputs, outputs, arrays;\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                inputs = tf.tidy(function () {\n                  return pixels instanceof tf.Tensor ? pixels : _this._preprocess(tf.browser.fromPixels(pixels, 3));\n                });\n                _context2.next = 3;\n                return this.model.executeAsync(inputs, this.is_new_od_model ? this.NEW_OD_OUTPUT_TENSORS : null);\n\n              case 3:\n                outputs = _context2.sent;\n                tf.dispose(inputs);\n                _context2.next = 7;\n                return !Array.isArray(outputs) ? outputs.array() : Promise.all(outputs.map(function (t) {\n                  return t.array();\n                }));\n\n              case 7:\n                arrays = _context2.sent;\n                tf.dispose(outputs);\n                return _context2.abrupt(\"return\", this._postprocess(arrays));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function executeAsync(_x2) {\n        return _executeAsync.apply(this, arguments);\n      }\n\n      return executeAsync;\n    }()\n  }, {\n    key: \"_postprocess\",\n    value: function () {\n      var _postprocess2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(outputs) {\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", outputs);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function _postprocess(_x3) {\n        return _postprocess2.apply(this, arguments);\n      }\n\n      return _postprocess;\n    }()\n  }]);\n  return Model;\n}();\n\nvar ObjectDetectionModel = /*#__PURE__*/function (_Model) {\n  (0, _inherits2.default)(ObjectDetectionModel, _Model);\n\n  var _super = _createSuper(ObjectDetectionModel);\n\n  function ObjectDetectionModel() {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, ObjectDetectionModel);\n    _this2 = _super.call(this);\n    _this2.ANCHORS = [0.573, 0.677, 1.87, 2.06, 3.34, 5.47, 7.88, 3.53, 9.77, 9.17];\n    return _this2;\n  }\n\n  (0, _createClass2.default)(ObjectDetectionModel, [{\n    key: \"_preprocess\",\n    value: function _preprocess(image) {\n      var rgb_image = tf.image.resizeBilinear(image.expandDims().toFloat(), [this.input_size, this.input_size]);\n      return this.is_rgb_input ? rgb_image : rgb_image.reverse(-1); // RGB->BGR for old models\n    }\n  }, {\n    key: \"_postprocess\",\n    value: function () {\n      var _postprocess3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(outputs) {\n        var _this3 = this;\n\n        var _tf$tidy, _tf$tidy2, boxes, scores, classes, selected_indices, tensor_results, results;\n\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(outputs.length == 3)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", outputs);\n\n              case 2:\n                _tf$tidy = tf.tidy(function () {\n                  // TODO: Need more efficient implmentation\n                  var num_anchor = _this3.ANCHORS.length / 2;\n                  var channels = outputs[0][0][0].length;\n                  var height = outputs[0].length;\n                  var width = outputs[0][0].length;\n                  var num_class = channels / num_anchor - 5;\n                  var boxes = [];\n                  var scores = [];\n                  var classes = [];\n\n                  for (var grid_y = 0; grid_y < height; grid_y++) {\n                    for (var grid_x = 0; grid_x < width; grid_x++) {\n                      var offset = 0;\n\n                      for (var i = 0; i < num_anchor; i++) {\n                        var x = (_this3._logistic(outputs[0][grid_y][grid_x][offset++]) + grid_x) / width;\n                        var y = (_this3._logistic(outputs[0][grid_y][grid_x][offset++]) + grid_y) / height;\n                        var w = Math.exp(outputs[0][grid_y][grid_x][offset++]) * _this3.ANCHORS[i * 2] / width;\n                        var h = Math.exp(outputs[0][grid_y][grid_x][offset++]) * _this3.ANCHORS[i * 2 + 1] / height;\n                        var objectness = tf.scalar(_this3._logistic(outputs[0][grid_y][grid_x][offset++]));\n                        var class_probabilities = tf.tensor1d(outputs[0][grid_y][grid_x].slice(offset, offset + num_class)).softmax();\n                        offset += num_class;\n                        class_probabilities = class_probabilities.mul(objectness);\n                        var max_index = class_probabilities.argMax();\n                        boxes.push([x - w / 2, y - h / 2, x + w / 2, y + h / 2]);\n                        scores.push(class_probabilities.max().dataSync()[0]);\n                        classes.push(max_index.dataSync()[0]);\n                      }\n                    }\n                  }\n\n                  boxes = tf.tensor2d(boxes);\n                  scores = tf.tensor1d(scores);\n                  classes = tf.tensor1d(classes);\n                  return [boxes, scores, classes];\n                }), _tf$tidy2 = (0, _slicedToArray2.default)(_tf$tidy, 3), boxes = _tf$tidy2[0], scores = _tf$tidy2[1], classes = _tf$tidy2[2];\n                _context4.next = 5;\n                return tf.image.nonMaxSuppressionAsync(boxes, scores, 10);\n\n              case 5:\n                selected_indices = _context4.sent;\n                tensor_results = [boxes.gather(selected_indices), scores.gather(selected_indices), classes.gather(selected_indices)];\n                _context4.next = 9;\n                return tensor_results[0].array();\n\n              case 9:\n                _context4.t0 = _context4.sent;\n                _context4.next = 12;\n                return tensor_results[1].array();\n\n              case 12:\n                _context4.t1 = _context4.sent;\n                _context4.next = 15;\n                return tensor_results[2].array();\n\n              case 15:\n                _context4.t2 = _context4.sent;\n                results = [_context4.t0, _context4.t1, _context4.t2];\n                tf.dispose([boxes, scores, classes]);\n                tf.dispose(selected_indices);\n                tf.dispose(tensor_results);\n                return _context4.abrupt(\"return\", results);\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function _postprocess(_x4) {\n        return _postprocess3.apply(this, arguments);\n      }\n\n      return _postprocess;\n    }()\n  }, {\n    key: \"_logistic\",\n    value: function _logistic(x) {\n      if (x > 0) {\n        return 1 / (1 + Math.exp(-x));\n      } else {\n        var e = Math.exp(x);\n        return e / (1 + e);\n      }\n    }\n  }]);\n  return ObjectDetectionModel;\n}(Model);\n\nexports.ObjectDetectionModel = ObjectDetectionModel;\n\nvar ClassificationModel = /*#__PURE__*/function (_Model2) {\n  (0, _inherits2.default)(ClassificationModel, _Model2);\n\n  var _super2 = _createSuper(ClassificationModel);\n\n  function ClassificationModel() {\n    (0, _classCallCheck2.default)(this, ClassificationModel);\n    return _super2.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ClassificationModel, [{\n    key: \"_preprocess\",\n    value: function _preprocess(image) {\n      // CenterCrop\n      var _image$shape$slice = image.shape.slice(0, 2),\n          _image$shape$slice2 = (0, _slicedToArray2.default)(_image$shape$slice, 2),\n          h = _image$shape$slice2[0],\n          w = _image$shape$slice2[1];\n\n      var top = h > w ? (h - w) / 2 : 0;\n      var left = h > w ? 0 : (w - h) / 2;\n      var size = Math.min(h, w);\n      var rgb_image = tf.image.cropAndResize(image.expandDims().toFloat(), [[top / h, left / w, (top + size) / h, (left + size) / w]], [0], [this.input_size, this.input_size]);\n      return this.is_rgb_input ? rgb_image : rgb_image.reverse(-1); // RGB->BGR for old models\n    }\n  }]);\n  return ClassificationModel;\n}(Model);\n\nexports.ClassificationModel = ClassificationModel;","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@microsoft/customvision-tfjs/lib/index.js"],"names":["_interopRequireDefault","require","_typeof","Object","defineProperty","exports","value","ObjectDetectionModel","ClassificationModel","_regenerator","_slicedToArray2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_asyncToGenerator2","_classCallCheck2","_createClass2","tf","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","e","Model","NEW_OD_OUTPUT_TENSORS","_loadModelAsync","mark","_callee","modelUrl","options","_args","wrap","_callee$","_context","prev","next","length","undefined","loadGraphModel","model","sent","input_size","inputs","shape","is_new_od_model","outputs","is_rgb_input","metadata","stop","loadModelAsync","_x","dispose","_executeAsync","_callee2","pixels","_this","arrays","_callee2$","_context2","tidy","Tensor","_preprocess","browser","fromPixels","executeAsync","Array","isArray","array","Promise","all","map","t","abrupt","_postprocess","_x2","_postprocess2","_callee3","_callee3$","_context3","_x3","_Model","_super","_this2","ANCHORS","image","rgb_image","resizeBilinear","expandDims","toFloat","reverse","_postprocess3","_callee4","_this3","_tf$tidy","_tf$tidy2","boxes","scores","classes","selected_indices","tensor_results","results","_callee4$","_context4","num_anchor","channels","height","width","num_class","grid_y","grid_x","offset","i","x","_logistic","y","w","Math","exp","h","objectness","scalar","class_probabilities","tensor1d","slice","softmax","mul","max_index","argMax","push","max","dataSync","tensor2d","nonMaxSuppressionAsync","gather","t0","t1","t2","_x4","_Model2","_super2","_image$shape$slice","_image$shape$slice2","top","left","size","min","cropAndResize"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectDetectionModel = exports.ClassificationModel = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Model = /*#__PURE__*/function () {\n  function Model() {\n    (0, _classCallCheck2.default)(this, Model);\n    this.NEW_OD_OUTPUT_TENSORS = ['detected_boxes', 'detected_scores', 'detected_classes'];\n  }\n\n  (0, _createClass2.default)(Model, [{\n    key: \"loadModelAsync\",\n    value: function () {\n      var _loadModelAsync = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(modelUrl) {\n        var options,\n            _args = arguments;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n                _context.next = 3;\n                return tf.loadGraphModel(modelUrl, options);\n\n              case 3:\n                this.model = _context.sent;\n                this.input_size = this.model.inputs[0].shape[1];\n                this.is_new_od_model = this.model.outputs.length == 3;\n                this.is_rgb_input = this.model.metadata && this.model.metadata['Image.BitmapPixelFormat'] == 'Rgb8' || this.is_new_od_model;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadModelAsync(_x) {\n        return _loadModelAsync.apply(this, arguments);\n      }\n\n      return loadModelAsync;\n    }()\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.model.dispose();\n    }\n  }, {\n    key: \"executeAsync\",\n    value: function () {\n      var _executeAsync = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(pixels) {\n        var _this = this;\n\n        var inputs, outputs, arrays;\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                inputs = tf.tidy(function () {\n                  return pixels instanceof tf.Tensor ? pixels : _this._preprocess(tf.browser.fromPixels(pixels, 3));\n                });\n                _context2.next = 3;\n                return this.model.executeAsync(inputs, this.is_new_od_model ? this.NEW_OD_OUTPUT_TENSORS : null);\n\n              case 3:\n                outputs = _context2.sent;\n                tf.dispose(inputs);\n                _context2.next = 7;\n                return !Array.isArray(outputs) ? outputs.array() : Promise.all(outputs.map(function (t) {\n                  return t.array();\n                }));\n\n              case 7:\n                arrays = _context2.sent;\n                tf.dispose(outputs);\n                return _context2.abrupt(\"return\", this._postprocess(arrays));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function executeAsync(_x2) {\n        return _executeAsync.apply(this, arguments);\n      }\n\n      return executeAsync;\n    }()\n  }, {\n    key: \"_postprocess\",\n    value: function () {\n      var _postprocess2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(outputs) {\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", outputs);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function _postprocess(_x3) {\n        return _postprocess2.apply(this, arguments);\n      }\n\n      return _postprocess;\n    }()\n  }]);\n  return Model;\n}();\n\nvar ObjectDetectionModel = /*#__PURE__*/function (_Model) {\n  (0, _inherits2.default)(ObjectDetectionModel, _Model);\n\n  var _super = _createSuper(ObjectDetectionModel);\n\n  function ObjectDetectionModel() {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, ObjectDetectionModel);\n    _this2 = _super.call(this);\n    _this2.ANCHORS = [0.573, 0.677, 1.87, 2.06, 3.34, 5.47, 7.88, 3.53, 9.77, 9.17];\n    return _this2;\n  }\n\n  (0, _createClass2.default)(ObjectDetectionModel, [{\n    key: \"_preprocess\",\n    value: function _preprocess(image) {\n      var rgb_image = tf.image.resizeBilinear(image.expandDims().toFloat(), [this.input_size, this.input_size]);\n      return this.is_rgb_input ? rgb_image : rgb_image.reverse(-1); // RGB->BGR for old models\n    }\n  }, {\n    key: \"_postprocess\",\n    value: function () {\n      var _postprocess3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(outputs) {\n        var _this3 = this;\n\n        var _tf$tidy, _tf$tidy2, boxes, scores, classes, selected_indices, tensor_results, results;\n\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(outputs.length == 3)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", outputs);\n\n              case 2:\n                _tf$tidy = tf.tidy(function () {\n                  // TODO: Need more efficient implmentation\n                  var num_anchor = _this3.ANCHORS.length / 2;\n                  var channels = outputs[0][0][0].length;\n                  var height = outputs[0].length;\n                  var width = outputs[0][0].length;\n                  var num_class = channels / num_anchor - 5;\n                  var boxes = [];\n                  var scores = [];\n                  var classes = [];\n\n                  for (var grid_y = 0; grid_y < height; grid_y++) {\n                    for (var grid_x = 0; grid_x < width; grid_x++) {\n                      var offset = 0;\n\n                      for (var i = 0; i < num_anchor; i++) {\n                        var x = (_this3._logistic(outputs[0][grid_y][grid_x][offset++]) + grid_x) / width;\n                        var y = (_this3._logistic(outputs[0][grid_y][grid_x][offset++]) + grid_y) / height;\n                        var w = Math.exp(outputs[0][grid_y][grid_x][offset++]) * _this3.ANCHORS[i * 2] / width;\n                        var h = Math.exp(outputs[0][grid_y][grid_x][offset++]) * _this3.ANCHORS[i * 2 + 1] / height;\n                        var objectness = tf.scalar(_this3._logistic(outputs[0][grid_y][grid_x][offset++]));\n                        var class_probabilities = tf.tensor1d(outputs[0][grid_y][grid_x].slice(offset, offset + num_class)).softmax();\n                        offset += num_class;\n                        class_probabilities = class_probabilities.mul(objectness);\n                        var max_index = class_probabilities.argMax();\n                        boxes.push([x - w / 2, y - h / 2, x + w / 2, y + h / 2]);\n                        scores.push(class_probabilities.max().dataSync()[0]);\n                        classes.push(max_index.dataSync()[0]);\n                      }\n                    }\n                  }\n\n                  boxes = tf.tensor2d(boxes);\n                  scores = tf.tensor1d(scores);\n                  classes = tf.tensor1d(classes);\n                  return [boxes, scores, classes];\n                }), _tf$tidy2 = (0, _slicedToArray2.default)(_tf$tidy, 3), boxes = _tf$tidy2[0], scores = _tf$tidy2[1], classes = _tf$tidy2[2];\n                _context4.next = 5;\n                return tf.image.nonMaxSuppressionAsync(boxes, scores, 10);\n\n              case 5:\n                selected_indices = _context4.sent;\n                tensor_results = [boxes.gather(selected_indices), scores.gather(selected_indices), classes.gather(selected_indices)];\n                _context4.next = 9;\n                return tensor_results[0].array();\n\n              case 9:\n                _context4.t0 = _context4.sent;\n                _context4.next = 12;\n                return tensor_results[1].array();\n\n              case 12:\n                _context4.t1 = _context4.sent;\n                _context4.next = 15;\n                return tensor_results[2].array();\n\n              case 15:\n                _context4.t2 = _context4.sent;\n                results = [_context4.t0, _context4.t1, _context4.t2];\n                tf.dispose([boxes, scores, classes]);\n                tf.dispose(selected_indices);\n                tf.dispose(tensor_results);\n                return _context4.abrupt(\"return\", results);\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function _postprocess(_x4) {\n        return _postprocess3.apply(this, arguments);\n      }\n\n      return _postprocess;\n    }()\n  }, {\n    key: \"_logistic\",\n    value: function _logistic(x) {\n      if (x > 0) {\n        return 1 / (1 + Math.exp(-x));\n      } else {\n        var e = Math.exp(x);\n        return e / (1 + e);\n      }\n    }\n  }]);\n  return ObjectDetectionModel;\n}(Model);\n\nexports.ObjectDetectionModel = ObjectDetectionModel;\n\nvar ClassificationModel = /*#__PURE__*/function (_Model2) {\n  (0, _inherits2.default)(ClassificationModel, _Model2);\n\n  var _super2 = _createSuper(ClassificationModel);\n\n  function ClassificationModel() {\n    (0, _classCallCheck2.default)(this, ClassificationModel);\n    return _super2.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ClassificationModel, [{\n    key: \"_preprocess\",\n    value: function _preprocess(image) {\n      // CenterCrop\n      var _image$shape$slice = image.shape.slice(0, 2),\n          _image$shape$slice2 = (0, _slicedToArray2.default)(_image$shape$slice, 2),\n          h = _image$shape$slice2[0],\n          w = _image$shape$slice2[1];\n\n      var top = h > w ? (h - w) / 2 : 0;\n      var left = h > w ? 0 : (w - h) / 2;\n      var size = Math.min(h, w);\n      var rgb_image = tf.image.cropAndResize(image.expandDims().toFloat(), [[top / h, left / w, (top + size) / h, (left + size) / w]], [0], [this.input_size, this.input_size]);\n      return this.is_rgb_input ? rgb_image : rgb_image.reverse(-1); // RGB->BGR for old models\n    }\n  }]);\n  return ClassificationModel;\n}(Model);\n\nexports.ClassificationModel = ClassificationModel;"]},"metadata":{},"sourceType":"script"}