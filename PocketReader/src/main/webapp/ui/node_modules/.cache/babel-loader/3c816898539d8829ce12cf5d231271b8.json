{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.castConfig = {\n  kernelName: tfjs_1.Cast,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var dtype = args.attrs.dtype;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('SrcT', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('DstT', dtype), {\n      name: 'Truncate',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: false\n    }];\n    return backend.executeSingleOutput(tfjs_1.Cast, opAttrs, [x]);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Cast.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","castConfig","kernelName","Cast","backendName","kernelFunc","args","x","inputs","backend","dtype","attrs","opAttrs","createTensorsTypeOpAttr","name","type","binding","TF_ATTR_BOOL","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,UAAR,GAAqB;AACjBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,IADF;AAEjBC,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWD,KAAvB;AACA,QAAIE,OAAO,GAAG,CACVZ,uBAAuB,CAACa,uBAAxB,CAAgD,MAAhD,EAAwDN,CAAC,CAACG,KAA1D,CADU,EAEVV,uBAAuB,CAACa,uBAAxB,CAAgD,MAAhD,EAAwDH,KAAxD,CAFU,EAGV;AAAEI,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAEN,OAAO,CAACO,OAAR,CAAgBC,YAA1C;AAAwDpB,MAAAA,KAAK,EAAE;AAA/D,KAHU,CAAd;AAKA,WAAOY,OAAO,CAACS,mBAAR,CAA4BpB,MAAM,CAACK,IAAnC,EAAyCS,OAAzC,EAAkD,CAACL,CAAD,CAAlD,CAAP;AACH;AAbgB,CAArB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.castConfig = {\n    kernelName: tfjs_1.Cast,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var dtype = args.attrs.dtype;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('SrcT', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('DstT', dtype),\n            { name: 'Truncate', type: backend.binding.TF_ATTR_BOOL, value: false }\n        ];\n        return backend.executeSingleOutput(tfjs_1.Cast, opAttrs, [x]);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}