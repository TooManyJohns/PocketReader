{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.linSpaceConfig = {\n  kernelName: tfjs_1.LinSpace,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var backend = args.backend;\n    var _a = args.attrs,\n        start = _a.start,\n        stop = _a.stop,\n        num = _a.num;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32')];\n    return tfjs_1.tidy(function () {\n      var inputs = [tfjs_1.scalar(start, 'float32'), tfjs_1.scalar(stop, 'float32'), tfjs_1.scalar(num, 'int32')];\n      return backend.executeSingleOutput(tfjs_1.LinSpace, opAttrs, inputs);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/LinSpace.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","linSpaceConfig","kernelName","LinSpace","backendName","kernelFunc","args","backend","_a","attrs","start","stop","num","opAttrs","createTensorsTypeOpAttr","tidy","inputs","scalar","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,cAAR,GAAyB;AACrBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,QADE;AAErBC,EAAAA,WAAW,EAAE,YAFQ;AAGrBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,QAAIC,EAAE,GAAGF,IAAI,CAACG,KAAd;AAAA,QAAqBC,KAAK,GAAGF,EAAE,CAACE,KAAhC;AAAA,QAAuCC,IAAI,GAAGH,EAAE,CAACG,IAAjD;AAAA,QAAuDC,GAAG,GAAGJ,EAAE,CAACI,GAAhE;AACA,QAAIC,OAAO,GAAG,CACVb,uBAAuB,CAACc,uBAAxB,CAAgD,GAAhD,EAAqD,SAArD,CADU,EAEVd,uBAAuB,CAACc,uBAAxB,CAAgD,MAAhD,EAAwD,OAAxD,CAFU,CAAd;AAIA,WAAOhB,MAAM,CAACiB,IAAP,CAAY,YAAY;AAC3B,UAAIC,MAAM,GAAG,CACTlB,MAAM,CAACmB,MAAP,CAAcP,KAAd,EAAqB,SAArB,CADS,EACwBZ,MAAM,CAACmB,MAAP,CAAcN,IAAd,EAAoB,SAApB,CADxB,EACwDb,MAAM,CAACmB,MAAP,CAAcL,GAAd,EAAmB,OAAnB,CADxD,CAAb;AAGA,aAAOL,OAAO,CAACW,mBAAR,CAA4BpB,MAAM,CAACK,QAAnC,EAA6CU,OAA7C,EAAsDG,MAAtD,CAAP;AACH,KALM,CAAP;AAMH;AAhBoB,CAAzB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.linSpaceConfig = {\n    kernelName: tfjs_1.LinSpace,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var backend = args.backend;\n        var _a = args.attrs, start = _a.start, stop = _a.stop, num = _a.num;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32')\n        ];\n        return tfjs_1.tidy(function () {\n            var inputs = [\n                tfjs_1.scalar(start, 'float32'), tfjs_1.scalar(stop, 'float32'), tfjs_1.scalar(num, 'int32')\n            ];\n            return backend.executeSingleOutput(tfjs_1.LinSpace, opAttrs, inputs);\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}