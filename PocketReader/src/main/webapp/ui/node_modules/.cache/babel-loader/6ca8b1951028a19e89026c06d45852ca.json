{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnlutz/Github/gamerilla/monkeyportal/src/views/HomeScreen/HomeScreen.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport ProfilePicture from \"../../components/ProfilePicture/ProfilePicture\";\n\nconst HomeScreen = () => {\n  var name, email, uid, profilepicture;\n  var user = firebase.auth().onAuthStateChanged(function (user) {\n    // Lay connection with the database.\n    var firestore = firebase.firestore();\n    var db = firestore.collection('users').doc(user.uid);\n  });\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    profilepicture = user.profilepicture;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: /*#__PURE__*/_jsxDEV(DivOne, {\n      children: /*#__PURE__*/_jsxDEV(DivTwo, {\n        children: user.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_c = HomeScreen;\nexport default HomeScreen;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Background;\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DivOne;\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`;\n_c4 = DivTwo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"DivOne\");\n$RefreshReg$(_c4, \"DivTwo\");","map":{"version":3,"sources":["/Users/johnlutz/Github/gamerilla/monkeyportal/src/views/HomeScreen/HomeScreen.js"],"names":["React","useState","styled","firebase","ProfilePicture","HomeScreen","name","email","uid","profilepicture","user","auth","onAuthStateChanged","firestore","db","collection","doc","displayName","firstname","Background","div","DivOne","DivTwo"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,OAAOC,cAAP,MAA2B,gDAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,MAAIC,IAAJ,EAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,cAAtB;AACA,MAAIC,IAAI,GAAGP,QAAQ,CAACQ,IAAT,GAAgBC,kBAAhB,CAAmC,UAAUF,IAAV,EAAgB;AAE5D;AACA,QAAIG,SAAS,GAAGV,QAAQ,CAACU,SAAT,EAAhB;AACA,QAAIC,EAAE,GAAGD,SAAS,CAACE,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCN,IAAI,CAACF,GAAvC,CAAT;AACH,GALY,CAAX;;AAOA,MAAIE,IAAI,IAAI,IAAZ,EAAkB;AAChBJ,IAAAA,IAAI,GAAGI,IAAI,CAACO,WAAZ;AACAV,IAAAA,KAAK,GAAGG,IAAI,CAACH,KAAb;AACAE,IAAAA,cAAc,GAAGC,IAAI,CAACD,cAAtB;AACAD,IAAAA,GAAG,GAAGE,IAAI,CAACF,GAAX,CAJgB,CAIC;AACA;AACA;AAClB;;AAEC,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,kBACGE,IAAI,CAACQ;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3BH;;KAAMb,U;AA6BJ,eAAeA,UAAf;AAGF,MAAMc,UAAU,GAAGjB,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U;AAYN,MAAME,MAAM,GAAGnB,MAAM,CAACkB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,M;AAYN,MAAMC,MAAM,GAAGpB,MAAM,CAACkB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,M","sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport firebase from 'firebase/app'\nimport 'firebase/auth';\n\nimport ProfilePicture from \"../../components/ProfilePicture/ProfilePicture\";\n\nconst HomeScreen = () => {\n  var name, email, uid, profilepicture;\n  var user = firebase.auth().onAuthStateChanged(function (user) {\n\n    // Lay connection with the database.\n    var firestore = firebase.firestore();\n    var db = firestore.collection('users').doc(user.uid);\n});\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    profilepicture = user.profilepicture;\n    uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\n                     // this value to authenticate with your backend server, if\n                     // you have one. Use User.getToken() instead.\n  }\n\n    return (\n      <Background>\n        <DivOne>        \n          <DivTwo>          \n            {user.firstname}\n          </DivTwo>\n        </DivOne>\n      </Background>\n    );\n  }\n\n  export default HomeScreen;\n\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`\n\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`\n"]},"metadata":{},"sourceType":"module"}