{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { getAllPokemon } from '../../services/PokemonService';\nimport logoImg from \"../../assets/pocketdexlogo.png\";\nimport Logo from \"../../components/Logo/Logo\";\n\nconst HomeScreen = () => {\n  _s();\n\n  var _pokemonList$, _pokemonList$2, _pokemonList$3, _pokemonList$4;\n\n  const [pokemonList, setPokemonList] = useState({\n    id: 0,\n    pokemonName: ''\n  }); // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon\n\n  useEffect(() => {\n    let mounted = true;\n    getAllPokemon().then(items => {\n      if (mounted) {\n        console.log(items);\n        setPokemonList(items);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: /*#__PURE__*/_jsxDEV(DivOne, {\n      children: /*#__PURE__*/_jsxDEV(DivTwo, {\n        children: [/*#__PURE__*/_jsxDEV(PokemonListTopCard, {\n          children: [/*#__PURE__*/_jsxDEV(Logo, {\n            imageUrl: logoImg,\n            backgroundColor: 'green'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonListSearchCard, {\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              maxLength: 320,\n              type: \"text\",\n              placeholder: \"Pokemon Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PokemonListMainCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_pokemonList$ = pokemonList[0]) === null || _pokemonList$ === void 0 ? void 0 : _pokemonList$.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_pokemonList$2 = pokemonList[0]) === null || _pokemonList$2 === void 0 ? void 0 : _pokemonList$2.pokemonName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_pokemonList$3 = pokemonList[1]) === null || _pokemonList$3 === void 0 ? void 0 : _pokemonList$3.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_pokemonList$4 = pokemonList[1]) === null || _pokemonList$4 === void 0 ? void 0 : _pokemonList$4.pokemonName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomeScreen, \"URVMRsab8qsM1rOoWkGTXjDDsyU=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Background;\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c3 = DivOne;\nconst DivTwo = styled.div`\n  width: 80%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  background-color: green;\n  display: flex;\n  flex-direction: column;\n`; // Holds title, search bar\n\n_c4 = DivTwo;\nconst PokemonListTopCard = styled.div`\n  width: 100%;\n  height: 20%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n`; // Holds search bar\n\n_c5 = PokemonListTopCard;\nconst PokemonListSearchCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background-color: red;\n  align-items: center;\n`; // Stores the list of Pokemon that are filtered by the PokemonListtitleCard's Search Card\n\n_c6 = PokemonListSearchCard;\nconst PokemonListMainCard = styled.div`\n  width: 100%;\n  height: 70%;\n  background-size: cover;\n  justify-content: center;\n  background-color: pink;\n  display: flex;\n  flex-direction: row;\n`;\n_c7 = PokemonListMainCard;\nconst TextInput = styled.input`\n\n  margin-bottom: 5px;\n  margin-top: 5px;\n  height: 100%;\n  width: auto%\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  outline: none;\n  border-radius: 15px;\n  color: black;\n  font-family: Lucida Grande;\n  font-size: 1.5em;\n  padding:10px;\n  ::placeholder {\n    color: grey;\n    font-family: Lucida Grande;\n  }\n`;\n_c8 = TextInput;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"DivOne\");\n$RefreshReg$(_c4, \"DivTwo\");\n$RefreshReg$(_c5, \"PokemonListTopCard\");\n$RefreshReg$(_c6, \"PokemonListSearchCard\");\n$RefreshReg$(_c7, \"PokemonListMainCard\");\n$RefreshReg$(_c8, \"TextInput\");","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js"],"names":["React","useState","useEffect","styled","getAllPokemon","logoImg","Logo","HomeScreen","pokemonList","setPokemonList","id","pokemonName","mounted","then","items","console","log","Background","div","DivOne","DivTwo","PokemonListTopCard","PokemonListSearchCard","PokemonListMainCard","TextInput","input"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,+BAA9B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC;AAAES,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE;AAAtB,GAAD,CAA9C,CADuB,CAGvB;AACA;AACA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,GAAG,IAAd;AACAR,IAAAA,aAAa,GACVS,IADH,CACQC,KAAK,IAAI;AACb,UAAGF,OAAH,EAAY;AACVG,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAL,QAAAA,cAAc,CAACK,KAAD,CAAd;AACD;AACF,KANH;AAOA,WAAO,MAAMF,OAAO,GAAG,KAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAaE,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,kBAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEP,OAAhB;AAAyB,YAAA,eAAe,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,qBAAD;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,EAAE,GADb;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,mBAAD;AAAA,kCACE;AAAA,uCAAIG,WAAW,CAAC,CAAD,CAAf,kDAAI,cAAgBE;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,wCAAIF,WAAW,CAAC,CAAD,CAAf,mDAAI,eAAgBG;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,wCAAIH,WAAW,CAAC,CAAD,CAAf,mDAAI,eAAgBE;AAApB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,wCAAIF,WAAW,CAAC,CAAD,CAAf,mDAAI,eAAgBG;AAApB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5CH;;GAAMJ,U;;KAAAA,U;AA8CJ,eAAeA,UAAf;AAGF,MAAMU,UAAU,GAAGd,MAAM,CAACe,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U;AAYN,MAAME,MAAM,GAAGhB,MAAM,CAACe,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,M;AAYN,MAAMC,MAAM,GAAGjB,MAAM,CAACe,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA,C,CAYA;;MAZME,M;AAaN,MAAMC,kBAAkB,GAAGlB,MAAM,CAACe,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA,C,CAaA;;MAbMG,kB;AAcN,MAAMC,qBAAqB,GAAGnB,MAAM,CAACe,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA,CANA,C,CAQA;;MARMI,qB;AASN,MAAMC,mBAAmB,GAAGpB,MAAM,CAACe,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMK,mB;AAUN,MAAMC,SAAS,GAAGrB,MAAM,CAACsB,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,S","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\n\nimport { getAllPokemon } from '../../services/PokemonService'\nimport logoImg from \"../../assets/pocketdexlogo.png\";\n\nimport Logo from \"../../components/Logo/Logo\";\n\nconst HomeScreen = () => {\n  const [pokemonList, setPokemonList] = useState({ id: 0, pokemonName: '' });\n\n  // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon\n  useEffect(() => {\n    let mounted = true;\n    getAllPokemon()\n      .then(items => {\n        if(mounted) {\n          console.log(items)\n          setPokemonList(items)\n        }\n      })\n    return () => mounted = false;\n  }, [])\n \n\n    return (\n      <Background>\n        <DivOne>        \n          <DivTwo>  \n            <PokemonListTopCard>\n              <Logo imageUrl={logoImg} backgroundColor={'green'}></Logo>\n              <PokemonListSearchCard>\n                <TextInput\n                  maxLength={320}\n                  type=\"text\"\n                  placeholder=\"Pokemon Name\"\n                ></TextInput>              \n              </PokemonListSearchCard>\n            </PokemonListTopCard>\n            <PokemonListMainCard>\n              <p>{pokemonList[0]?.id}</p>\n              <p>{pokemonList[0]?.pokemonName}</p>\n              <p>{pokemonList[1]?.id}</p>\n              <p>{pokemonList[1]?.pokemonName}</p>\n            </PokemonListMainCard>\n\n          </DivTwo>\n        </DivOne>\n      </Background>\n    );\n  }\n\n  export default HomeScreen;\n\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst DivTwo = styled.div`\n  width: 80%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  background-color: green;\n  display: flex;\n  flex-direction: column;\n`\n\n// Holds title, search bar\nconst PokemonListTopCard = styled.div`\n  width: 100%;\n  height: 20%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n`\n\n\n// Holds search bar\nconst PokemonListSearchCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background-color: red;\n  align-items: center;\n`\n\n// Stores the list of Pokemon that are filtered by the PokemonListtitleCard's Search Card\nconst PokemonListMainCard = styled.div`\n  width: 100%;\n  height: 70%;\n  background-size: cover;\n  justify-content: center;\n  background-color: pink;\n  display: flex;\n  flex-direction: row;\n`\n\nconst TextInput = styled.input`\n\n  margin-bottom: 5px;\n  margin-top: 5px;\n  height: 100%;\n  width: auto%\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  outline: none;\n  border-radius: 15px;\n  color: black;\n  font-family: Lucida Grande;\n  font-size: 1.5em;\n  padding:10px;\n  ::placeholder {\n    color: grey;\n    font-family: Lucida Grande;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}