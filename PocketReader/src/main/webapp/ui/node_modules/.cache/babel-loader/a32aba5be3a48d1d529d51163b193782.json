{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.gatherNdConfig = {\n  kernelName: tfjs_1.GatherNd,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        params = _a.params,\n        indices = _a.indices;\n    var backend = args.backend;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tparams', params.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tindices', 'int32')];\n    return backend.executeSingleOutput(tfjs_1.GatherNd, opAttrs, [params, indices]);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/GatherNd.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","gatherNdConfig","kernelName","GatherNd","backendName","kernelFunc","args","_a","inputs","params","indices","backend","opAttrs","createTensorsTypeOpAttr","dtype","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,cAAR,GAAyB;AACrBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,QADE;AAErBC,EAAAA,WAAW,EAAE,YAFQ;AAGrBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,MAAM,GAAGF,EAAE,CAACE,MAAlC;AAAA,QAA0CC,OAAO,GAAGH,EAAE,CAACG,OAAvD;AACA,QAAIC,OAAO,GAAGL,IAAI,CAACK,OAAnB;AACA,QAAIC,OAAO,GAAG,CACVZ,uBAAuB,CAACa,uBAAxB,CAAgD,SAAhD,EAA2DJ,MAAM,CAACK,KAAlE,CADU,EAEVd,uBAAuB,CAACa,uBAAxB,CAAgD,UAAhD,EAA4D,OAA5D,CAFU,CAAd;AAIA,WAAOF,OAAO,CAACI,mBAAR,CAA4BjB,MAAM,CAACK,QAAnC,EAA6CS,OAA7C,EAAsD,CAACH,MAAD,EAASC,OAAT,CAAtD,CAAP;AACH;AAXoB,CAAzB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.gatherNdConfig = {\n    kernelName: tfjs_1.GatherNd,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, params = _a.params, indices = _a.indices;\n        var backend = args.backend;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tparams', params.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tindices', 'int32')\n        ];\n        return backend.executeSingleOutput(tfjs_1.GatherNd, opAttrs, [params, indices]);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}