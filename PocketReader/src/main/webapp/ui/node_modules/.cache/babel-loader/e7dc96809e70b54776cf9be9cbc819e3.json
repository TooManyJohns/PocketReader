{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/gamerilla/monkeyportal/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport LoginScreen from './views/LoginScreen/LoginScreen';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\nimport HomeScreen from './views/HomeScreen/HomeScreen';\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const AuthContext = /*#__PURE__*/React.createContext(null);\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setLoggedIn, user] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      setLoggedIn\n    },\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"b2Urbk9Lurey5Uukj0YtjakMisA=\");\n\n_c = App;\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnlutz/Github/gamerilla/monkeyportal/src/App.js"],"names":["React","useState","LoginScreen","withFirebaseAuth","firebase","firebaseConfig","HomeScreen","firebaseApp","initializeApp","AuthContext","createContext","App","isLoggedIn","setLoggedIn","user","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,MAAMC,WAAW,GAAGH,QAAQ,CAACI,aAAT,CAAuBH,cAAvB,CAApB;AAEA,OAAO,MAAMI,WAAW,gBAAGT,KAAK,CAACU,aAAN,CAAoB,IAApB,CAApB;;AAEP,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,WAAb,EAA0BC,IAA1B,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AAEE,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEW,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA7B;AAAA,2BACA,QAAC,KAAD,CAAO,QAAP;AAAA,gBAEMD,UAAU,gBACN,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADM,gBAEN,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAdMD,G;;KAAAA,G;AAiBT,MAAMI,eAAe,GAAGR,WAAW,CAACS,IAAZ,EAAxB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,cAAc,EAAE,IAAId,QAAQ,CAACY,IAAT,CAAcG,kBAAlB;AADA,CAAlB;AAIA,eAAehB,gBAAgB,CAAC;AAC9Bc,EAAAA,SAD8B;AAE9BF,EAAAA;AAF8B,CAAD,CAAhB,CAGZJ,GAHY,CAAf","sourcesContent":["import React, { useState  }  from 'react';\nimport LoginScreen from './views/LoginScreen/LoginScreen'\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport firebase from 'firebase/app'\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\nimport HomeScreen from './views/HomeScreen/HomeScreen';\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport const AuthContext = React.createContext(null);\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn, user] = useState(false);\n\n    return (\n      <AuthContext.Provider value={{ isLoggedIn, setLoggedIn }}>\n      <React.Fragment>\n          {\n            isLoggedIn\n              ? <HomeScreen></HomeScreen>\n              : <LoginScreen></LoginScreen>\n          }\n      </React.Fragment>\n      </AuthContext.Provider>\n    );\n  }\n\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n"]},"metadata":{},"sourceType":"module"}