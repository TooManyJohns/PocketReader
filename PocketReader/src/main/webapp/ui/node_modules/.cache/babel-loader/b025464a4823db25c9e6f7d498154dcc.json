{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getAllPokemon } from '../../services/PokemonService';\n\nconst HomeScreen = () => {\n  _s();\n\n  var user = firebase.auth().currentUser;\n  var name, email, uid, profilepicture;\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    profilepicture = user.profilepicture;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n\n  const [pokemonList, setPokemonList] = useState([]); // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon as it's retrieved\n\n  useEffect(() => {\n    getAllPokemon().then(response => {\n      console.log(response[0].pokemonName.toString());\n      setPokemonList(response);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: /*#__PURE__*/_jsxDEV(DivOne, {\n      children: /*#__PURE__*/_jsxDEV(DivTwo, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemonList[0].pokemonName.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomeScreen, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Background;\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DivOne;\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`;\n_c4 = DivTwo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"DivOne\");\n$RefreshReg$(_c4, \"DivTwo\");","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js"],"names":["React","useState","useEffect","styled","firebase","getAllPokemon","HomeScreen","user","auth","currentUser","name","email","uid","profilepicture","displayName","pokemonList","setPokemonList","then","response","console","log","pokemonName","toString","Background","div","DivOne","DivTwo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,SAASC,aAAT,QAA8B,+BAA9B;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,MAAIC,IAAI,GAAGH,QAAQ,CAACI,IAAT,GAAgBC,WAA3B;AACA,MAAIC,IAAJ,EAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,cAAtB;;AAEA,MAAIN,IAAI,IAAI,IAAZ,EAAkB;AAChBG,IAAAA,IAAI,GAAGH,IAAI,CAACO,WAAZ;AACAH,IAAAA,KAAK,GAAGJ,IAAI,CAACI,KAAb;AACAE,IAAAA,cAAc,GAAGN,IAAI,CAACM,cAAtB;AACAD,IAAAA,GAAG,GAAGL,IAAI,CAACK,GAAX,CAJgB,CAIC;AACA;AACA;AAClB;;AAED,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C,CAbuB,CAiBvB;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,aAAa,GACZY,IADD,CACMC,QAAQ,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAAC,CAAD,CAAR,CAAYG,WAAZ,CAAwBC,QAAxB,EAAZ;AACAN,MAAAA,cAAc,CAACE,QAAD,CAAd;AACF,KAJC;AAKD,GANQ,EAMN,EANM,CAAT;AAQE,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAA,oBAAIH,WAAW,CAAC,CAAD,CAAX,CAAeM,WAAf,CAA2BC,QAA3B;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtCH;;GAAMhB,U;;KAAAA,U;AAwCJ,eAAeA,UAAf;AAGF,MAAMiB,UAAU,GAAGpB,MAAM,CAACqB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U;AAYN,MAAME,MAAM,GAAGtB,MAAM,CAACqB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,M;AAYN,MAAMC,MAAM,GAAGvB,MAAM,CAACqB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,M","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport firebase from 'firebase/app'\nimport 'firebase/auth';\n\nimport { getAllPokemon } from '../../services/PokemonService'\n\n\nconst HomeScreen = () => {\n  var user = firebase.auth().currentUser;\n  var name, email, uid, profilepicture;\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    profilepicture = user.profilepicture;\n    uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\n                     // this value to authenticate with your backend server, if\n                     // you have one. Use User.getToken() instead.\n  }\n\n  const [pokemonList, setPokemonList] = useState([]);\n\n  \n\n  // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon as it's retrieved\n\n  useEffect(() => {\n    getAllPokemon()\n    .then(response => {\n     console.log(response[0].pokemonName.toString())\n     setPokemonList(response);\n  })\n  }, []);\n\n    return (\n      <Background>\n        <DivOne>        \n          <DivTwo>  \n            <p>{pokemonList[0].pokemonName.toString()}</p>\n          </DivTwo>\n        </DivOne>\n      </Background>\n    );\n  }\n\n  export default HomeScreen;\n\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`\n\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`\n"]},"metadata":{},"sourceType":"module"}