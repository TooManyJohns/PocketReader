{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.avgPool3DConfig = {\n  kernelName: tfjs_1.AvgPool3D,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n        filterSize = _a.filterSize,\n        strides = _a.strides,\n        pad = _a.pad,\n        dimRoundingMode = _a.dimRoundingMode,\n        dataFormat = _a.dataFormat;\n    var convInfo = tfjs_1.backend_util.computePool3DInfo(x.shape, filterSize, strides, 1\n    /* dilations */\n    , pad, dimRoundingMode, dataFormat);\n\n    if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n      throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" + (\"while padding was \" + convInfo.padInfo.type));\n    }\n\n    var ksize = [1, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, 1];\n    var $strides = [1, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var $dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NDHWC' : 'NCDHW';\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), {\n      name: 'ksize',\n      type: backend.binding.TF_ATTR_INT,\n      value: ksize\n    }, {\n      name: 'strides',\n      type: backend.binding.TF_ATTR_INT,\n      value: $strides\n    }, {\n      name: 'padding',\n      type: backend.binding.TF_ATTR_STRING,\n      value: padding\n    }, {\n      name: 'data_format',\n      type: backend.binding.TF_ATTR_STRING,\n      value: $dataFormat\n    }];\n    return backend.executeSingleOutput(tfjs_1.AvgPool3D, opAttrs, [x]);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/AvgPool3D.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","avgPool3DConfig","kernelName","AvgPool3D","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","filterSize","strides","pad","dimRoundingMode","dataFormat","convInfo","backend_util","computePool3DInfo","shape","padInfo","type","Error","ksize","filterDepth","filterHeight","filterWidth","$strides","strideDepth","strideHeight","strideWidth","padding","$dataFormat","opAttrs","createTensorsTypeOpAttr","dtype","name","binding","TF_ATTR_INT","TF_ATTR_STRING","executeSingleOutput"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.avgPool3DConfig = {\n    kernelName: tfjs_1.AvgPool3D,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, filterSize = _a.filterSize, strides = _a.strides, pad = _a.pad, dimRoundingMode = _a.dimRoundingMode, dataFormat = _a.dataFormat;\n        var convInfo = tfjs_1.backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode, dataFormat);\n        if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n            throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" +\n                (\"while padding was \" + convInfo.padInfo.type));\n        }\n        var ksize = [\n            1, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, 1\n        ];\n        var $strides = [\n            1, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, 1\n        ];\n        var padding = convInfo.padInfo.type;\n        var $dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NDHWC' : 'NCDHW';\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            { name: 'ksize', type: backend.binding.TF_ATTR_INT, value: ksize },\n            { name: 'strides', type: backend.binding.TF_ATTR_INT, value: $strides },\n            { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding },\n            {\n                name: 'data_format',\n                type: backend.binding.TF_ATTR_STRING,\n                value: $dataFormat\n            },\n        ];\n        return backend.executeSingleOutput(tfjs_1.AvgPool3D, opAttrs, [x]);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}