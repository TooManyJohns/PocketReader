{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.selectConfig = {\n  kernelName: tfjs_1.Select,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        condition = _a.condition,\n        t = _a.t,\n        e = _a.e;\n    var backend = args.backend;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tfjs_1.backend_util.upcastType(t.dtype, e.dtype))];\n    return backend.executeSingleOutput(tfjs_1.Select, opAttrs, [condition, t, e]);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Select.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","selectConfig","kernelName","Select","backendName","kernelFunc","args","_a","inputs","condition","t","e","backend","opAttrs","createTensorsTypeOpAttr","backend_util","upcastType","dtype","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,SAAS,GAAGF,EAAE,CAACE,SAArC;AAAA,QAAgDC,CAAC,GAAGH,EAAE,CAACG,CAAvD;AAAA,QAA0DC,CAAC,GAAGJ,EAAE,CAACI,CAAjE;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACM,OAAnB;AACA,QAAIC,OAAO,GAAG,CAACb,uBAAuB,CAACc,uBAAxB,CAAgD,GAAhD,EAAqDhB,MAAM,CAACiB,YAAP,CAAoBC,UAApB,CAA+BN,CAAC,CAACO,KAAjC,EAAwCN,CAAC,CAACM,KAA1C,CAArD,CAAD,CAAd;AACA,WAAOL,OAAO,CAACM,mBAAR,CAA4BpB,MAAM,CAACK,MAAnC,EAA2CU,OAA3C,EAAoD,CAACJ,SAAD,EAAYC,CAAZ,EAAeC,CAAf,CAApD,CAAP;AACH;AARkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.selectConfig = {\n    kernelName: tfjs_1.Select,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, condition = _a.condition, t = _a.t, e = _a.e;\n        var backend = args.backend;\n        var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tfjs_1.backend_util.upcastType(t.dtype, e.dtype))];\n        return backend.executeSingleOutput(tfjs_1.Select, opAttrs, [condition, t, e]);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}