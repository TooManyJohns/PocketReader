{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.nonMaxSuppressionV3Config = {\n  kernelName: tfjs_1.NonMaxSuppressionV3,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        boxes = _a.boxes,\n        scores = _a.scores;\n    var backend = args.backend;\n    var _b = args.attrs,\n        maxOutputSize = _b.maxOutputSize,\n        iouThreshold = _b.iouThreshold,\n        scoreThreshold = _b.scoreThreshold;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype)];\n    var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n    var iouThresholdTensor = tfjs_1.scalar(iouThreshold);\n    var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold);\n    var res = backend.executeSingleOutput(tfjs_1.NonMaxSuppressionV3, opAttrs, [boxes, scores, maxOutputSizeTensor, iouThresholdTensor, scoreThresholdTensor]);\n    maxOutputSizeTensor.dispose();\n    iouThresholdTensor.dispose();\n    scoreThresholdTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/NonMaxSuppressionV3.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","nonMaxSuppressionV3Config","kernelName","NonMaxSuppressionV3","backendName","kernelFunc","args","_a","inputs","boxes","scores","backend","_b","attrs","maxOutputSize","iouThreshold","scoreThreshold","opAttrs","createTensorsTypeOpAttr","dtype","maxOutputSizeTensor","scalar","iouThresholdTensor","scoreThresholdTensor","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,yBAAR,GAAoC;AAChCC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,mBADa;AAEhCC,EAAAA,WAAW,EAAE,YAFmB;AAGhCC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,KAAK,GAAGF,EAAE,CAACE,KAAjC;AAAA,QAAwCC,MAAM,GAAGH,EAAE,CAACG,MAApD;AACA,QAAIC,OAAO,GAAGL,IAAI,CAACK,OAAnB;AACA,QAAIC,EAAE,GAAGN,IAAI,CAACO,KAAd;AAAA,QAAqBC,aAAa,GAAGF,EAAE,CAACE,aAAxC;AAAA,QAAuDC,YAAY,GAAGH,EAAE,CAACG,YAAzE;AAAA,QAAuFC,cAAc,GAAGJ,EAAE,CAACI,cAA3G;AACA,QAAIC,OAAO,GAAG,CAACjB,uBAAuB,CAACkB,uBAAxB,CAAgD,GAAhD,EAAqDT,KAAK,CAACU,KAA3D,CAAD,CAAd;AACA,QAAIC,mBAAmB,GAAGtB,MAAM,CAACuB,MAAP,CAAcP,aAAd,EAA6B,OAA7B,CAA1B;AACA,QAAIQ,kBAAkB,GAAGxB,MAAM,CAACuB,MAAP,CAAcN,YAAd,CAAzB;AACA,QAAIQ,oBAAoB,GAAGzB,MAAM,CAACuB,MAAP,CAAcL,cAAd,CAA3B;AACA,QAAIQ,GAAG,GAAGb,OAAO,CAACc,mBAAR,CAA4B3B,MAAM,CAACK,mBAAnC,EAAwDc,OAAxD,EAAiE,CACvER,KADuE,EAChEC,MADgE,EACxDU,mBADwD,EACnCE,kBADmC,EAEvEC,oBAFuE,CAAjE,CAAV;AAIAH,IAAAA,mBAAmB,CAACM,OAApB;AACAJ,IAAAA,kBAAkB,CAACI,OAAnB;AACAH,IAAAA,oBAAoB,CAACG,OAArB;AACA,WAAOF,GAAP;AACH;AAnB+B,CAApC","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.nonMaxSuppressionV3Config = {\n    kernelName: tfjs_1.NonMaxSuppressionV3,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, boxes = _a.boxes, scores = _a.scores;\n        var backend = args.backend;\n        var _b = args.attrs, maxOutputSize = _b.maxOutputSize, iouThreshold = _b.iouThreshold, scoreThreshold = _b.scoreThreshold;\n        var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype)];\n        var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n        var iouThresholdTensor = tfjs_1.scalar(iouThreshold);\n        var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold);\n        var res = backend.executeSingleOutput(tfjs_1.NonMaxSuppressionV3, opAttrs, [\n            boxes, scores, maxOutputSizeTensor, iouThresholdTensor,\n            scoreThresholdTensor\n        ]);\n        maxOutputSizeTensor.dispose();\n        iouThresholdTensor.dispose();\n        scoreThresholdTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}