{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.resizeBilinearConfig = {\n  kernelName: tfjs_1.ResizeBilinear,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var images = args.inputs.images;\n    var backend = args.backend;\n    var _a = args.attrs,\n        alignCorners = _a.alignCorners,\n        halfPixelCenters = _a.halfPixelCenters,\n        size = _a.size;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', images.dtype), {\n      name: 'align_corners',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: alignCorners\n    }, {\n      name: 'half_pixel_centers',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: halfPixelCenters\n    }];\n    var newHeight = size[0],\n        newWidth = size[1];\n    var sizeTensor = tfjs_1.tensor1d([newHeight, newWidth], 'int32');\n    var ret = backend.executeSingleOutput(tfjs_1.ResizeBilinear, opAttrs, [images, sizeTensor]);\n    sizeTensor.dispose();\n    return ret;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/ResizeBilinear.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","resizeBilinearConfig","kernelName","ResizeBilinear","backendName","kernelFunc","args","images","inputs","backend","_a","attrs","alignCorners","halfPixelCenters","size","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_BOOL","newHeight","newWidth","sizeTensor","tensor1d","ret","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,oBAAR,GAA+B;AAC3BC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,cADQ;AAE3BC,EAAAA,WAAW,EAAE,YAFc;AAG3BC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,MAAM,GAAGD,IAAI,CAACE,MAAL,CAAYD,MAAzB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAd;AAAA,QAAqBC,YAAY,GAAGF,EAAE,CAACE,YAAvC;AAAA,QAAqDC,gBAAgB,GAAGH,EAAE,CAACG,gBAA3E;AAAA,QAA6FC,IAAI,GAAGJ,EAAE,CAACI,IAAvG;AACA,QAAIC,OAAO,GAAG,CACVf,uBAAuB,CAACgB,uBAAxB,CAAgD,GAAhD,EAAqDT,MAAM,CAACU,KAA5D,CADU,EAEV;AACIC,MAAAA,IAAI,EAAE,eADV;AAEIC,MAAAA,IAAI,EAAEV,OAAO,CAACW,OAAR,CAAgBC,YAF1B;AAGIxB,MAAAA,KAAK,EAAEe;AAHX,KAFU,EAOV;AACIM,MAAAA,IAAI,EAAE,oBADV;AAEIC,MAAAA,IAAI,EAAEV,OAAO,CAACW,OAAR,CAAgBC,YAF1B;AAGIxB,MAAAA,KAAK,EAAEgB;AAHX,KAPU,CAAd;AAaA,QAAIS,SAAS,GAAGR,IAAI,CAAC,CAAD,CAApB;AAAA,QAAyBS,QAAQ,GAAGT,IAAI,CAAC,CAAD,CAAxC;AACA,QAAIU,UAAU,GAAG1B,MAAM,CAAC2B,QAAP,CAAgB,CAACH,SAAD,EAAYC,QAAZ,CAAhB,EAAuC,OAAvC,CAAjB;AACA,QAAIG,GAAG,GAAGjB,OAAO,CAACkB,mBAAR,CAA4B7B,MAAM,CAACK,cAAnC,EAAmDY,OAAnD,EAA4D,CAACR,MAAD,EAASiB,UAAT,CAA5D,CAAV;AACAA,IAAAA,UAAU,CAACI,OAAX;AACA,WAAOF,GAAP;AACH;AAzB0B,CAA/B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.resizeBilinearConfig = {\n    kernelName: tfjs_1.ResizeBilinear,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var images = args.inputs.images;\n        var backend = args.backend;\n        var _a = args.attrs, alignCorners = _a.alignCorners, halfPixelCenters = _a.halfPixelCenters, size = _a.size;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', images.dtype),\n            {\n                name: 'align_corners',\n                type: backend.binding.TF_ATTR_BOOL,\n                value: alignCorners\n            },\n            {\n                name: 'half_pixel_centers',\n                type: backend.binding.TF_ATTR_BOOL,\n                value: halfPixelCenters\n            },\n        ];\n        var newHeight = size[0], newWidth = size[1];\n        var sizeTensor = tfjs_1.tensor1d([newHeight, newWidth], 'int32');\n        var ret = backend.executeSingleOutput(tfjs_1.ResizeBilinear, opAttrs, [images, sizeTensor]);\n        sizeTensor.dispose();\n        return ret;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}