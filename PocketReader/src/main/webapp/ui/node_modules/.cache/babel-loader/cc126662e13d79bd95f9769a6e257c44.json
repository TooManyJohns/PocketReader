{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.oneHotConfig = {\n  kernelName: tfjs_1.OneHot,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var indices = args.inputs.indices;\n    var backend = args.backend;\n    var _a = args.attrs,\n        depth = _a.depth,\n        onValue = _a.onValue,\n        offValue = _a.offValue;\n    var depthTensor = tfjs_1.scalar(depth, 'int32');\n    var onValueTensor = tfjs_1.scalar(onValue, 'int32');\n    var offValueTensor = tfjs_1.scalar(offValue, 'int32');\n    var opAttrs = [{\n      name: 'axis',\n      type: backend.binding.TF_ATTR_INT,\n      value: -1\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', indices.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('TI', indices.dtype)];\n    var res = backend.executeSingleOutput(tfjs_1.OneHot, opAttrs, [indices, depthTensor, onValueTensor, offValueTensor]);\n    depthTensor.dispose();\n    onValueTensor.dispose();\n    offValueTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/OneHot.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","oneHotConfig","kernelName","OneHot","backendName","kernelFunc","args","indices","inputs","backend","_a","attrs","depth","onValue","offValue","depthTensor","scalar","onValueTensor","offValueTensor","opAttrs","name","type","binding","TF_ATTR_INT","createTensorsTypeOpAttr","dtype","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAYD,OAA1B;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAd;AAAA,QAAqBC,KAAK,GAAGF,EAAE,CAACE,KAAhC;AAAA,QAAuCC,OAAO,GAAGH,EAAE,CAACG,OAApD;AAAA,QAA6DC,QAAQ,GAAGJ,EAAE,CAACI,QAA3E;AACA,QAAIC,WAAW,GAAGjB,MAAM,CAACkB,MAAP,CAAcJ,KAAd,EAAqB,OAArB,CAAlB;AACA,QAAIK,aAAa,GAAGnB,MAAM,CAACkB,MAAP,CAAcH,OAAd,EAAuB,OAAvB,CAApB;AACA,QAAIK,cAAc,GAAGpB,MAAM,CAACkB,MAAP,CAAcF,QAAd,EAAwB,OAAxB,CAArB;AACA,QAAIK,OAAO,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAEZ,OAAO,CAACa,OAAR,CAAgBC,WAAtC;AAAmD1B,MAAAA,KAAK,EAAE,CAAC;AAA3D,KADU,EAEVG,uBAAuB,CAACwB,uBAAxB,CAAgD,GAAhD,EAAqDjB,OAAO,CAACkB,KAA7D,CAFU,EAGVzB,uBAAuB,CAACwB,uBAAxB,CAAgD,IAAhD,EAAsDjB,OAAO,CAACkB,KAA9D,CAHU,CAAd;AAKA,QAAIC,GAAG,GAAGjB,OAAO,CAACkB,mBAAR,CAA4B7B,MAAM,CAACK,MAAnC,EAA2CgB,OAA3C,EAAoD,CAACZ,OAAD,EAAUQ,WAAV,EAAuBE,aAAvB,EAAsCC,cAAtC,CAApD,CAAV;AACAH,IAAAA,WAAW,CAACa,OAAZ;AACAX,IAAAA,aAAa,CAACW,OAAd;AACAV,IAAAA,cAAc,CAACU,OAAf;AACA,WAAOF,GAAP;AACH;AApBkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.oneHotConfig = {\n    kernelName: tfjs_1.OneHot,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var indices = args.inputs.indices;\n        var backend = args.backend;\n        var _a = args.attrs, depth = _a.depth, onValue = _a.onValue, offValue = _a.offValue;\n        var depthTensor = tfjs_1.scalar(depth, 'int32');\n        var onValueTensor = tfjs_1.scalar(onValue, 'int32');\n        var offValueTensor = tfjs_1.scalar(offValue, 'int32');\n        var opAttrs = [\n            { name: 'axis', type: backend.binding.TF_ATTR_INT, value: -1 },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', indices.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('TI', indices.dtype)\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.OneHot, opAttrs, [indices, depthTensor, onValueTensor, offValueTensor]);\n        depthTensor.dispose();\n        onValueTensor.dispose();\n        offValueTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}