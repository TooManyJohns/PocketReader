{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nexports._fusedMatMulConfig = {\n  kernelName: tfjs_1._FusedMatMul,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        a = _a.a,\n        b = _a.b,\n        bias = _a.bias,\n        preluActivationWeights = _a.preluActivationWeights;\n    var backend = args.backend;\n    var _b = args.attrs,\n        transposeA = _b.transposeA,\n        transposeB = _b.transposeB,\n        activation = _b.activation,\n        leakyreluAlpha = _b.leakyreluAlpha; // Core TensorFlow does not have a fused BatchMatMul op. Combine calls to\n    // achieve the same results:\n\n    return tfjs_1.tidy(function () {\n      var result = tfjs_1.matMul(a, b, transposeA, transposeB);\n\n      if (bias != null) {\n        result = tfjs_1.add(result, bias);\n      }\n\n      result = backend.applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n      return result;\n    });\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/_FusedMatMul.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","_fusedMatMulConfig","kernelName","_FusedMatMul","backendName","kernelFunc","args","_a","inputs","a","b","bias","preluActivationWeights","backend","_b","attrs","transposeA","transposeB","activation","leakyreluAlpha","tidy","result","matMul","add","applyActivation"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACAH,OAAO,CAACI,kBAAR,GAA6B;AACzBC,EAAAA,UAAU,EAAEH,MAAM,CAACI,YADM;AAEzBC,EAAAA,WAAW,EAAE,YAFY;AAGzBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,CAAC,GAAGF,EAAE,CAACE,CAA7B;AAAA,QAAgCC,CAAC,GAAGH,EAAE,CAACG,CAAvC;AAAA,QAA0CC,IAAI,GAAGJ,EAAE,CAACI,IAApD;AAAA,QAA0DC,sBAAsB,GAAGL,EAAE,CAACK,sBAAtF;AACA,QAAIC,OAAO,GAAGP,IAAI,CAACO,OAAnB;AACA,QAAIC,EAAE,GAAGR,IAAI,CAACS,KAAd;AAAA,QAAqBC,UAAU,GAAGF,EAAE,CAACE,UAArC;AAAA,QAAiDC,UAAU,GAAGH,EAAE,CAACG,UAAjE;AAAA,QAA6EC,UAAU,GAAGJ,EAAE,CAACI,UAA7F;AAAA,QAAyGC,cAAc,GAAGL,EAAE,CAACK,cAA7H,CAHwB,CAIxB;AACA;;AACA,WAAOpB,MAAM,CAACqB,IAAP,CAAY,YAAY;AAC3B,UAAIC,MAAM,GAAGtB,MAAM,CAACuB,MAAP,CAAcb,CAAd,EAAiBC,CAAjB,EAAoBM,UAApB,EAAgCC,UAAhC,CAAb;;AACA,UAAIN,IAAI,IAAI,IAAZ,EAAkB;AACdU,QAAAA,MAAM,GAAGtB,MAAM,CAACwB,GAAP,CAAWF,MAAX,EAAmBV,IAAnB,CAAT;AACH;;AACDU,MAAAA,MAAM,GAAGR,OAAO,CAACW,eAAR,CAAwBH,MAAxB,EAAgCH,UAAhC,EAA4CN,sBAA5C,EAAoEO,cAApE,CAAT;AACA,aAAOE,MAAP;AACH,KAPM,CAAP;AAQH;AAjBwB,CAA7B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nexports._fusedMatMulConfig = {\n    kernelName: tfjs_1._FusedMatMul,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, a = _a.a, b = _a.b, bias = _a.bias, preluActivationWeights = _a.preluActivationWeights;\n        var backend = args.backend;\n        var _b = args.attrs, transposeA = _b.transposeA, transposeB = _b.transposeB, activation = _b.activation, leakyreluAlpha = _b.leakyreluAlpha;\n        // Core TensorFlow does not have a fused BatchMatMul op. Combine calls to\n        // achieve the same results:\n        return tfjs_1.tidy(function () {\n            var result = tfjs_1.matMul(a, b, transposeA, transposeB);\n            if (bias != null) {\n                result = tfjs_1.add(result, bias);\n            }\n            result = backend.applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n            return result;\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}