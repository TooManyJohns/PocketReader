{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.batchToSpaceNDConfig = {\n  kernelName: tfjs_1.BatchToSpaceND,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n        blockShape = _a.blockShape,\n        crops = _a.crops;\n    var blockShapeTensor = tfjs_1.tensor1d(blockShape, 'int32');\n    var cropsTensor = tfjs_1.tensor2d(crops, [crops.length, crops[0].length], 'int32');\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tblock_shape', 'int32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tcrops', cropsTensor.dtype)];\n    var res = backend.executeSingleOutput(tfjs_1.BatchToSpaceND, opAttrs, [x, blockShapeTensor, cropsTensor]);\n    cropsTensor.dispose();\n    blockShapeTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/BatchToSpaceND.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","batchToSpaceNDConfig","kernelName","BatchToSpaceND","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","blockShape","crops","blockShapeTensor","tensor1d","cropsTensor","tensor2d","length","opAttrs","createTensorsTypeOpAttr","dtype","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,oBAAR,GAA+B;AAC3BC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,cADQ;AAE3BC,EAAAA,WAAW,EAAE,YAFc;AAG3BC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAd;AAAA,QAAqBC,UAAU,GAAGF,EAAE,CAACE,UAArC;AAAA,QAAiDC,KAAK,GAAGH,EAAE,CAACG,KAA5D;AACA,QAAIC,gBAAgB,GAAGhB,MAAM,CAACiB,QAAP,CAAgBH,UAAhB,EAA4B,OAA5B,CAAvB;AACA,QAAII,WAAW,GAAGlB,MAAM,CAACmB,QAAP,CAAgBJ,KAAhB,EAAuB,CAACA,KAAK,CAACK,MAAP,EAAeL,KAAK,CAAC,CAAD,CAAL,CAASK,MAAxB,CAAvB,EAAwD,OAAxD,CAAlB;AACA,QAAIC,OAAO,GAAG,CACVnB,uBAAuB,CAACoB,uBAAxB,CAAgD,GAAhD,EAAqDb,CAAC,CAACc,KAAvD,CADU,EAEVrB,uBAAuB,CAACoB,uBAAxB,CAAgD,cAAhD,EAAgE,OAAhE,CAFU,EAGVpB,uBAAuB,CAACoB,uBAAxB,CAAgD,QAAhD,EAA0DJ,WAAW,CAACK,KAAtE,CAHU,CAAd;AAKA,QAAIC,GAAG,GAAGb,OAAO,CAACc,mBAAR,CAA4BzB,MAAM,CAACK,cAAnC,EAAmDgB,OAAnD,EAA4D,CAACZ,CAAD,EAAIO,gBAAJ,EAAsBE,WAAtB,CAA5D,CAAV;AACAA,IAAAA,WAAW,CAACQ,OAAZ;AACAV,IAAAA,gBAAgB,CAACU,OAAjB;AACA,WAAOF,GAAP;AACH;AAlB0B,CAA/B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.batchToSpaceNDConfig = {\n    kernelName: tfjs_1.BatchToSpaceND,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, blockShape = _a.blockShape, crops = _a.crops;\n        var blockShapeTensor = tfjs_1.tensor1d(blockShape, 'int32');\n        var cropsTensor = tfjs_1.tensor2d(crops, [crops.length, crops[0].length], 'int32');\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tblock_shape', 'int32'),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tcrops', cropsTensor.dtype)\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.BatchToSpaceND, opAttrs, [x, blockShapeTensor, cropsTensor]);\n        cropsTensor.dispose();\n        blockShapeTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}