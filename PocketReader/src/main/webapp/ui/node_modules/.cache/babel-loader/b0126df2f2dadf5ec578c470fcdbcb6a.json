{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nfunction pack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var axis = attrs.axis;\n  var opAttrs = [{\n    name: 'N',\n    type: backend.binding.TF_ATTR_INT,\n    value: inputs.length\n  }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', inputs), {\n    name: 'axis',\n    type: backend.binding.TF_ATTR_INT,\n    value: axis\n  }];\n  var res = backend.executeSingleOutput(tfjs_1.Pack, opAttrs, inputs);\n  return res;\n}\n\nexports.pack = pack;\nexports.packConfig = {\n  kernelName: tfjs_1.Pack,\n  backendName: 'tensorflow',\n  kernelFunc: pack\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Pack.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","pack","args","inputs","backend","attrs","axis","opAttrs","name","type","binding","TF_ATTR_INT","length","createTensorsTypeOpAttr","res","executeSingleOutput","Pack","packConfig","kernelName","backendName","kernelFunc"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACA,SAASE,IAAT,CAAcC,IAAd,EAAoB;AAChB,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,MAA0BC,OAAO,GAAGF,IAAI,CAACE,OAAzC;AAAA,MAAkDC,KAAK,GAAGH,IAAI,CAACG,KAA/D;AACA,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,MAAIC,OAAO,GAAG,CACV;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,IAAI,EAAEL,OAAO,CAACM,OAAR,CAAgBC,WAAnC;AAAgDd,IAAAA,KAAK,EAAEM,MAAM,CAACS;AAA9D,GADU,EAEVZ,uBAAuB,CAACa,uBAAxB,CAAgD,GAAhD,EAAqDV,MAArD,CAFU,EAGV;AAAEK,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,IAAI,EAAEL,OAAO,CAACM,OAAR,CAAgBC,WAAtC;AAAmDd,IAAAA,KAAK,EAAES;AAA1D,GAHU,CAAd;AAKA,MAAIQ,GAAG,GAAGV,OAAO,CAACW,mBAAR,CAA4BjB,MAAM,CAACkB,IAAnC,EAAyCT,OAAzC,EAAkDJ,MAAlD,CAAV;AACA,SAAOW,GAAP;AACH;;AACDlB,OAAO,CAACK,IAAR,GAAeA,IAAf;AACAL,OAAO,CAACqB,UAAR,GAAqB;AACjBC,EAAAA,UAAU,EAAEpB,MAAM,CAACkB,IADF;AAEjBG,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,UAAU,EAAEnB;AAHK,CAArB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nfunction pack(args) {\n    var inputs = args.inputs, backend = args.backend, attrs = args.attrs;\n    var axis = attrs.axis;\n    var opAttrs = [\n        { name: 'N', type: backend.binding.TF_ATTR_INT, value: inputs.length },\n        nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', inputs),\n        { name: 'axis', type: backend.binding.TF_ATTR_INT, value: axis }\n    ];\n    var res = backend.executeSingleOutput(tfjs_1.Pack, opAttrs, inputs);\n    return res;\n}\nexports.pack = pack;\nexports.packConfig = {\n    kernelName: tfjs_1.Pack,\n    backendName: 'tensorflow',\n    kernelFunc: pack\n};\n"]},"metadata":{},"sourceType":"script"}