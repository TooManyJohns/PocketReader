{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.bincountConfig = {\n  kernelName: tfjs_1.Bincount,\n  backendName: 'tensorflow',\n  kernelFunc: function (_a) {\n    var inputs = _a.inputs,\n        backend = _a.backend,\n        attrs = _a.attrs;\n    var _b = inputs,\n        x = _b.x,\n        weights = _b.weights;\n    var size = attrs.size;\n    var nodeBackend = backend;\n    var $size = tfjs_1.scalar(size, 'int32');\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', weights.dtype)];\n    var result = nodeBackend.executeSingleOutput(tfjs_1.Bincount, opAttrs, [x, $size, weights]);\n    $size.dispose();\n    return result;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Bincount.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","bincountConfig","kernelName","Bincount","backendName","kernelFunc","_a","inputs","backend","attrs","_b","x","weights","size","nodeBackend","$size","scalar","opAttrs","createTensorsTypeOpAttr","dtype","result","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,cAAR,GAAyB;AACrBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,QADE;AAErBC,EAAAA,WAAW,EAAE,YAFQ;AAGrBC,EAAAA,UAAU,EAAE,UAAUC,EAAV,EAAc;AACtB,QAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,QAAwBC,OAAO,GAAGF,EAAE,CAACE,OAArC;AAAA,QAA8CC,KAAK,GAAGH,EAAE,CAACG,KAAzD;AACA,QAAIC,EAAE,GAAGH,MAAT;AAAA,QAAiBI,CAAC,GAAGD,EAAE,CAACC,CAAxB;AAAA,QAA2BC,OAAO,GAAGF,EAAE,CAACE,OAAxC;AACA,QAAIC,IAAI,GAAGJ,KAAK,CAACI,IAAjB;AACA,QAAIC,WAAW,GAAGN,OAAlB;AACA,QAAIO,KAAK,GAAGjB,MAAM,CAACkB,MAAP,CAAcH,IAAd,EAAoB,OAApB,CAAZ;AACA,QAAII,OAAO,GAAG,CAACjB,uBAAuB,CAACkB,uBAAxB,CAAgD,GAAhD,EAAqDN,OAAO,CAACO,KAA7D,CAAD,CAAd;AACA,QAAIC,MAAM,GAAGN,WAAW,CAACO,mBAAZ,CAAgCvB,MAAM,CAACK,QAAvC,EAAiDc,OAAjD,EAA0D,CAACN,CAAD,EAAII,KAAJ,EAAWH,OAAX,CAA1D,CAAb;AACAG,IAAAA,KAAK,CAACO,OAAN;AACA,WAAOF,MAAP;AACH;AAboB,CAAzB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.bincountConfig = {\n    kernelName: tfjs_1.Bincount,\n    backendName: 'tensorflow',\n    kernelFunc: function (_a) {\n        var inputs = _a.inputs, backend = _a.backend, attrs = _a.attrs;\n        var _b = inputs, x = _b.x, weights = _b.weights;\n        var size = attrs.size;\n        var nodeBackend = backend;\n        var $size = tfjs_1.scalar(size, 'int32');\n        var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', weights.dtype)];\n        var result = nodeBackend.executeSingleOutput(tfjs_1.Bincount, opAttrs, [x, $size, weights]);\n        $size.dispose();\n        return result;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}