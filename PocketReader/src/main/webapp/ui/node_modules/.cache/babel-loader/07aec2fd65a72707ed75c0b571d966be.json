{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.absConfig = {\n  kernelName: tfjs_1.Abs,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n\n    if (x.dtype === 'complex64') {\n      var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tout', 'float32')];\n      return backend.executeSingleOutput('ComplexAbs', opAttrs, [x]);\n    }\n\n    return backend.executeSingleInput(tfjs_1.Abs, x);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Abs.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","absConfig","kernelName","Abs","backendName","kernelFunc","args","x","inputs","backend","dtype","opAttrs","createTensorsTypeOpAttr","executeSingleOutput","executeSingleInput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,SAAR,GAAoB;AAChBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,GADH;AAEhBC,EAAAA,WAAW,EAAE,YAFG;AAGhBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;;AACA,QAAIF,CAAC,CAACG,KAAF,KAAY,WAAhB,EAA6B;AACzB,UAAIC,OAAO,GAAG,CACVX,uBAAuB,CAACY,uBAAxB,CAAgD,GAAhD,EAAqDL,CAAC,CAACG,KAAvD,CADU,EAEVV,uBAAuB,CAACY,uBAAxB,CAAgD,MAAhD,EAAwD,SAAxD,CAFU,CAAd;AAIA,aAAOH,OAAO,CAACI,mBAAR,CAA4B,YAA5B,EAA0CF,OAA1C,EAAmD,CAACJ,CAAD,CAAnD,CAAP;AACH;;AACD,WAAOE,OAAO,CAACK,kBAAR,CAA2BhB,MAAM,CAACK,GAAlC,EAAuCI,CAAvC,CAAP;AACH;AAde,CAApB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.absConfig = {\n    kernelName: tfjs_1.Abs,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        if (x.dtype === 'complex64') {\n            var opAttrs = [\n                nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n                nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tout', 'float32')\n            ];\n            return backend.executeSingleOutput('ComplexAbs', opAttrs, [x]);\n        }\n        return backend.executeSingleInput(tfjs_1.Abs, x);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}