{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.reshapeConfig = {\n  kernelName: tfjs_1.Reshape,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var shape = args.attrs.shape;\n    var shapeTensor = tfjs_1.tensor1d(shape, 'int32');\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tshape', shapeTensor.dtype)];\n    var res = backend.executeSingleOutput(tfjs_1.Reshape, opAttrs, [x, shapeTensor]);\n    shapeTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Reshape.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","reshapeConfig","kernelName","Reshape","backendName","kernelFunc","args","x","inputs","backend","shape","attrs","shapeTensor","tensor1d","opAttrs","createTensorsTypeOpAttr","dtype","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,aAAR,GAAwB;AACpBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,OADC;AAEpBC,EAAAA,WAAW,EAAE,YAFO;AAGpBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWD,KAAvB;AACA,QAAIE,WAAW,GAAGd,MAAM,CAACe,QAAP,CAAgBH,KAAhB,EAAuB,OAAvB,CAAlB;AACA,QAAII,OAAO,GAAG,CACVd,uBAAuB,CAACe,uBAAxB,CAAgD,GAAhD,EAAqDR,CAAC,CAACS,KAAvD,CADU,EAEVhB,uBAAuB,CAACe,uBAAxB,CAAgD,QAAhD,EAA0DH,WAAW,CAACI,KAAtE,CAFU,CAAd;AAIA,QAAIC,GAAG,GAAGR,OAAO,CAACS,mBAAR,CAA4BpB,MAAM,CAACK,OAAnC,EAA4CW,OAA5C,EAAqD,CAACP,CAAD,EAAIK,WAAJ,CAArD,CAAV;AACAA,IAAAA,WAAW,CAACO,OAAZ;AACA,WAAOF,GAAP;AACH;AAfmB,CAAxB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.reshapeConfig = {\n    kernelName: tfjs_1.Reshape,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var shape = args.attrs.shape;\n        var shapeTensor = tfjs_1.tensor1d(shape, 'int32');\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tshape', shapeTensor.dtype)\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.Reshape, opAttrs, [x, shapeTensor]);\n        shapeTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}