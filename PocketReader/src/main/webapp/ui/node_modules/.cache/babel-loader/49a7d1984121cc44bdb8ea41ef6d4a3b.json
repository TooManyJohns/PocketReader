{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/gamerilla/monkeyportal/src/views/LoginScreen/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../App\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport logoImg from \"../../assets/monkeyportallogo.png\";\nimport Logo from \"../../components/Logo/Logo\";\n\nconst LoginScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrors] = useState(\"\");\n  const infoTextFields = {\n    loginTitle: \"So simple, a monkey could use it.\",\n    createTitle: \"Don't have an account? Create one to get started!\"\n  };\n  const Auth = useContext(AuthContext);\n\n  const handleForm = e => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n      console.log(res);\n      if (res.user) Auth.setLoggedIn(true);\n    }).catch(e => {\n      setErrors(e.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Logo, {\n        imageUrl: logoImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(InputCard, {\n        children: [/*#__PURE__*/_jsxDEV(LoginTitleText, {\n          children: infoTextFields.loginTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: email,\n          onChange: input => setEmail(input.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          type: \"password\",\n          value: password,\n          onChange: input => setPassword(input.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleForm(e),\n          children: /*#__PURE__*/_jsxDEV(LoginButton, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n          children: error ? \"Invalid email/password credentials\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreateTitleText, {\n          children: infoTextFields.createTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreateAccountButton, {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginScreen, \"iQhXU79r8LP2hu62lneHgacxd8E=\");\n\n_c = LoginScreen;\nexport default LoginScreen;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: #549672;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Background;\nconst Header = styled.h1`\n  padding-top: 1%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width 100%;\n  height: 100%;\n  flex:1;\n`;\n_c3 = Header;\nconst Modal = styled.div`\n  margin-top: -5%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width 100%;\n  height: 100%;\n  transform: translateY(-50%, -50%);\n`; // Create a Title component that'll render an <h1> tag with some styles\n\n_c4 = Modal;\nconst InputCard = styled.div`\n  justify-content: center;\n  height: auto;\n  width: 30%;\n  max-width: 30%;\n  min-width: 500px;\n  background-color: #3e8a61;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 30px;\n  padding-top: 25px;\n  border-radius: 15px;\n  margin:auto; \n`;\n_c5 = InputCard;\nconst LoginTitleText = styled.div`\n  text-align: center;\n  height: 100%;\n  margin-top: 3%;\n  margin-bottom: 2%;\n  font-size: 1.4em;\n  color: white;\n  font-family: Corbel;\n  padding:10px;\n  display: block;\n`;\n_c6 = LoginTitleText;\nconst TextInput = styled.input`\n  height: 100%;\n  margin: 10px;\n  margin-left: 20px;\n  margin-right: 20px;\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  outline: none;\n  border-radius: 15px;\n  color: black;\n  font-family: Franklin Gothic Light;\n  font-size: 1.7em;\n  padding-left: 15px;\n  padding:10px;\n  ::placeholder {\n    color: grey;\n    font-family: Franklin Gothic Light;\n  }\n`;\n_c7 = TextInput;\nconst LoginButton = styled.button`\n  font-size: 2em;\n  text-align: center;\n  height: 100%;\n  width: 80%;\n  border: 3px solid brown;\n  background-color: #bf6952;\n  font-family: Franklin Gothic Light;\n  color: white;\n  border-radius: 15px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 15px;\n`;\n_c8 = LoginButton;\nconst ErrorText = styled.div`\n  font-size: 1.2em;\n  color: red;\n  font-family: Corbel Light;\n  text-align: center;\n`;\n_c9 = ErrorText;\nconst CreateTitleText = styled.div`\n  font-size: 1.2em;\n  color: white;\n  font-family: Corbel Light;\n  text-align: center;\n`;\n_c10 = CreateTitleText;\nconst CreateAccountButton = styled.button`\n  font-size: 1.2em;\n  text-align: center;\n  height: 100%;\n  border: 3px solid brown;\n  background-color: #bf6952;\n  font-family: Franklin Gothic Light;\n  color: white;\n  border-radius: 15px;\n  margin: 20px;\n  margin-bottom: 40px;\n  margin-top: 5px;\n  padding: 10px;\n`;\n_c11 = CreateAccountButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"LoginScreen\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Modal\");\n$RefreshReg$(_c5, \"InputCard\");\n$RefreshReg$(_c6, \"LoginTitleText\");\n$RefreshReg$(_c7, \"TextInput\");\n$RefreshReg$(_c8, \"LoginButton\");\n$RefreshReg$(_c9, \"ErrorText\");\n$RefreshReg$(_c10, \"CreateTitleText\");\n$RefreshReg$(_c11, \"CreateAccountButton\");","map":{"version":3,"sources":["/Users/johnlutz/Github/gamerilla/monkeyportal/src/views/LoginScreen/LoginScreen.js"],"names":["React","useState","useContext","styled","AuthContext","firebase","logoImg","Logo","LoginScreen","email","setEmail","password","setPassword","error","setErrors","infoTextFields","loginTitle","createTitle","Auth","handleForm","e","preventDefault","auth","signInWithEmailAndPassword","then","res","console","log","user","setLoggedIn","catch","message","input","target","value","Background","div","Header","h1","Modal","InputCard","LoginTitleText","TextInput","LoginButton","button","ErrorText","CreateTitleText","CreateAccountButton"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMI,S;AAeN,MAAMC,cAAc,GAAGtC,MAAM,CAACiC,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMK,c;AAYN,MAAMC,SAAS,GAAGvC,MAAM,CAAC6B,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMU,S;AAoBN,MAAMC,WAAW,GAAGxC,MAAM,CAACyC,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,W;AAeN,MAAME,SAAS,GAAG1C,MAAM,CAACiC,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMS,S;AAQN,MAAMC,eAAe,GAAG3C,MAAM,CAACiC,GAAI;AACnC;AACA;AACA;AACA;AACA,CALA;OAAMU,e;AAON,MAAMC,mBAAmB,GAAG5C,MAAM,CAACyC,MAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;OAAMG,mB","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../App\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport logoImg from \"../../assets/monkeyportallogo.png\";\n\nimport Logo from \"../../components/Logo/Logo\";\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrors] = useState(\"\");\n\n  const infoTextFields = {\n    loginTitle: \"So simple, a monkey could use it.\",\n    createTitle: \"Don't have an account? Create one to get started!\",\n  };\n\n  const Auth = useContext(AuthContext);\n  const handleForm = (e) => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        console.log(res);\n        if (res.user) Auth.setLoggedIn(true);\n      })\n      .catch((e) => {\n        setErrors(e.message);\n      });\n  };\n\n  return (\n    <Background>\n      <Header>\n        <Logo imageUrl={logoImg}></Logo>\n      </Header>\n      <Modal>\n        <InputCard>\n          <LoginTitleText>{infoTextFields.loginTitle}</LoginTitleText>\n          <TextInput\n            type=\"text\"\n            placeholder=\"Username\"\n            value={email}\n            onChange={(input) => setEmail(input.target.value)}\n          ></TextInput>\n          <TextInput\n            type=\"password\"\n            value={password}\n            onChange={(input) => setPassword(input.target.value)}\n            placeholder=\"Password\"\n          ></TextInput>\n          <form onSubmit={(e) => handleForm(e)}>\n            <LoginButton>Login</LoginButton>\n          </form>\n          <ErrorText>\n            {error ? \"Invalid email/password credentials\" : \"\"}\n          </ErrorText>\n          <CreateTitleText>{infoTextFields.createTitle}</CreateTitleText>\n          <CreateAccountButton>Create Account</CreateAccountButton>\n        </InputCard>\n      </Modal>\n    </Background>\n  );\n};\n\nexport default LoginScreen;\n\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: #549672;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Header = styled.h1`\n  padding-top: 1%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width 100%;\n  height: 100%;\n  flex:1;\n`\n\nconst Modal = styled.div`\n  margin-top: -5%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width 100%;\n  height: 100%;\n  transform: translateY(-50%, -50%);\n`\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst InputCard = styled.div`\n  justify-content: center;\n  height: auto;\n  width: 30%;\n  max-width: 30%;\n  min-width: 500px;\n  background-color: #3e8a61;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 30px;\n  padding-top: 25px;\n  border-radius: 15px;\n  margin:auto; \n`;\n\nconst LoginTitleText = styled.div`\n  text-align: center;\n  height: 100%;\n  margin-top: 3%;\n  margin-bottom: 2%;\n  font-size: 1.4em;\n  color: white;\n  font-family: Corbel;\n  padding:10px;\n  display: block;\n`;\n\nconst TextInput = styled.input`\n  height: 100%;\n  margin: 10px;\n  margin-left: 20px;\n  margin-right: 20px;\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  outline: none;\n  border-radius: 15px;\n  color: black;\n  font-family: Franklin Gothic Light;\n  font-size: 1.7em;\n  padding-left: 15px;\n  padding:10px;\n  ::placeholder {\n    color: grey;\n    font-family: Franklin Gothic Light;\n  }\n`;\n\nconst LoginButton = styled.button`\n  font-size: 2em;\n  text-align: center;\n  height: 100%;\n  width: 80%;\n  border: 3px solid brown;\n  background-color: #bf6952;\n  font-family: Franklin Gothic Light;\n  color: white;\n  border-radius: 15px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 15px;\n`;\n\nconst ErrorText = styled.div`\n  font-size: 1.2em;\n  color: red;\n  font-family: Corbel Light;\n  text-align: center;\n`;\n\n\nconst CreateTitleText = styled.div`\n  font-size: 1.2em;\n  color: white;\n  font-family: Corbel Light;\n  text-align: center;\n`;\n\nconst CreateAccountButton = styled.button`\n  font-size: 1.2em;\n  text-align: center;\n  height: 100%;\n  border: 3px solid brown;\n  background-color: #bf6952;\n  font-family: Franklin Gothic Light;\n  color: white;\n  border-radius: 15px;\n  margin: 20px;\n  margin-bottom: 40px;\n  margin-top: 5px;\n  padding: 10px;\n`;\n\n"]},"metadata":{},"sourceType":"module"}