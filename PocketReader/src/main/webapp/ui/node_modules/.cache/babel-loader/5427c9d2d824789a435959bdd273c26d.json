{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\"); // tslint:disable-next-line: variable-name\n\n\nexports.LRNGradConfig = {\n  kernelName: tfjs_1.LRNGrad,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        x = _a.x,\n        y = _a.y,\n        dy = _a.dy;\n    var backend = args.backend;\n    var _b = args.attrs,\n        depthRadius = _b.depthRadius,\n        bias = _b.bias,\n        alpha = _b.alpha,\n        beta = _b.beta;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', dy.dtype), {\n      name: 'depth_radius',\n      type: backend.binding.TF_ATTR_INT,\n      value: depthRadius\n    }, {\n      name: 'bias',\n      type: backend.binding.TF_ATTR_FLOAT,\n      value: bias\n    }, {\n      name: 'alpha',\n      type: backend.binding.TF_ATTR_FLOAT,\n      value: alpha\n    }, {\n      name: 'beta',\n      type: backend.binding.TF_ATTR_FLOAT,\n      value: beta\n    }];\n    return backend.executeSingleOutput(tfjs_1.LRNGrad, opAttrs, [dy, x, y]);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/LRNGrad.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","LRNGradConfig","kernelName","LRNGrad","backendName","kernelFunc","args","_a","inputs","x","y","dy","backend","_b","attrs","depthRadius","bias","alpha","beta","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_INT","TF_ATTR_FLOAT","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC,C,CACA;;;AACAH,OAAO,CAACK,aAAR,GAAwB;AACpBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,OADC;AAEpBC,EAAAA,WAAW,EAAE,YAFO;AAGpBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,CAAC,GAAGF,EAAE,CAACE,CAA7B;AAAA,QAAgCC,CAAC,GAAGH,EAAE,CAACG,CAAvC;AAAA,QAA0CC,EAAE,GAAGJ,EAAE,CAACI,EAAlD;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACM,OAAnB;AACA,QAAIC,EAAE,GAAGP,IAAI,CAACQ,KAAd;AAAA,QAAqBC,WAAW,GAAGF,EAAE,CAACE,WAAtC;AAAA,QAAmDC,IAAI,GAAGH,EAAE,CAACG,IAA7D;AAAA,QAAmEC,KAAK,GAAGJ,EAAE,CAACI,KAA9E;AAAA,QAAqFC,IAAI,GAAGL,EAAE,CAACK,IAA/F;AACA,QAAIC,OAAO,GAAG,CACVnB,uBAAuB,CAACoB,uBAAxB,CAAgD,GAAhD,EAAqDT,EAAE,CAACU,KAAxD,CADU,EAEV;AACIC,MAAAA,IAAI,EAAE,cADV;AAEIC,MAAAA,IAAI,EAAEX,OAAO,CAACY,OAAR,CAAgBC,WAF1B;AAGI5B,MAAAA,KAAK,EAAEkB;AAHX,KAFU,EAOV;AAAEO,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAEX,OAAO,CAACY,OAAR,CAAgBE,aAAtC;AAAqD7B,MAAAA,KAAK,EAAEmB;AAA5D,KAPU,EAQV;AAAEM,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,IAAI,EAAEX,OAAO,CAACY,OAAR,CAAgBE,aAAvC;AAAsD7B,MAAAA,KAAK,EAAEoB;AAA7D,KARU,EASV;AAAEK,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAEX,OAAO,CAACY,OAAR,CAAgBE,aAAtC;AAAqD7B,MAAAA,KAAK,EAAEqB;AAA5D,KATU,CAAd;AAWA,WAAON,OAAO,CAACe,mBAAR,CAA4B7B,MAAM,CAACK,OAAnC,EAA4CgB,OAA5C,EAAqD,CAACR,EAAD,EAAKF,CAAL,EAAQC,CAAR,CAArD,CAAP;AACH;AAnBmB,CAAxB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n// tslint:disable-next-line: variable-name\nexports.LRNGradConfig = {\n    kernelName: tfjs_1.LRNGrad,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, x = _a.x, y = _a.y, dy = _a.dy;\n        var backend = args.backend;\n        var _b = args.attrs, depthRadius = _b.depthRadius, bias = _b.bias, alpha = _b.alpha, beta = _b.beta;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', dy.dtype),\n            {\n                name: 'depth_radius',\n                type: backend.binding.TF_ATTR_INT,\n                value: depthRadius\n            },\n            { name: 'bias', type: backend.binding.TF_ATTR_FLOAT, value: bias },\n            { name: 'alpha', type: backend.binding.TF_ATTR_FLOAT, value: alpha },\n            { name: 'beta', type: backend.binding.TF_ATTR_FLOAT, value: beta },\n        ];\n        return backend.executeSingleOutput(tfjs_1.LRNGrad, opAttrs, [dy, x, y]);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}