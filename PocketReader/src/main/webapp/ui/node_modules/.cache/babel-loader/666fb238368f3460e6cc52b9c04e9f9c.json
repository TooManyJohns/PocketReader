{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.concatConfig = {\n  kernelName: tfjs_1.Concat,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var tensors = args.inputs;\n    var backend = args.backend;\n    var axis = args.attrs.axis;\n    var opAttrs = [{\n      name: 'N',\n      type: backend.binding.TF_ATTR_INT,\n      value: tensors.length\n    }, {\n      name: 'Tidx',\n      type: backend.binding.TF_ATTR_TYPE,\n      value: backend.binding.TF_INT32\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tensors)];\n    var inputs = Array.from(tensors);\n    var axisTensor = tfjs_1.scalar(axis, 'int32');\n    inputs.push(axisTensor);\n    var res = backend.executeSingleOutput('ConcatV2', opAttrs, inputs);\n    axisTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Concat.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","concatConfig","kernelName","Concat","backendName","kernelFunc","args","tensors","inputs","backend","axis","attrs","opAttrs","name","type","binding","TF_ATTR_INT","length","TF_ATTR_TYPE","TF_INT32","createTensorsTypeOpAttr","Array","from","axisTensor","scalar","push","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,OAAO,GAAGD,IAAI,CAACE,MAAnB;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWD,IAAtB;AACA,QAAIE,OAAO,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,IAAI,EAAEL,OAAO,CAACM,OAAR,CAAgBC,WAAnC;AAAgDnB,MAAAA,KAAK,EAAEU,OAAO,CAACU;AAA/D,KADU,EAC+D;AACrEJ,MAAAA,IAAI,EAAE,MAD+D;AAErEC,MAAAA,IAAI,EAAEL,OAAO,CAACM,OAAR,CAAgBG,YAF+C;AAGrErB,MAAAA,KAAK,EAAEY,OAAO,CAACM,OAAR,CAAgBI;AAH8C,KAD/D,EAMVnB,uBAAuB,CAACoB,uBAAxB,CAAgD,GAAhD,EAAqDb,OAArD,CANU,CAAd;AAQA,QAAIC,MAAM,GAAGa,KAAK,CAACC,IAAN,CAAWf,OAAX,CAAb;AACA,QAAIgB,UAAU,GAAGzB,MAAM,CAAC0B,MAAP,CAAcd,IAAd,EAAoB,OAApB,CAAjB;AACAF,IAAAA,MAAM,CAACiB,IAAP,CAAYF,UAAZ;AACA,QAAIG,GAAG,GAAGjB,OAAO,CAACkB,mBAAR,CAA4B,UAA5B,EAAwCf,OAAxC,EAAiDJ,MAAjD,CAAV;AACAe,IAAAA,UAAU,CAACK,OAAX;AACA,WAAOF,GAAP;AACH;AArBkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.concatConfig = {\n    kernelName: tfjs_1.Concat,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var tensors = args.inputs;\n        var backend = args.backend;\n        var axis = args.attrs.axis;\n        var opAttrs = [\n            { name: 'N', type: backend.binding.TF_ATTR_INT, value: tensors.length }, {\n                name: 'Tidx',\n                type: backend.binding.TF_ATTR_TYPE,\n                value: backend.binding.TF_INT32\n            },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tensors)\n        ];\n        var inputs = Array.from(tensors);\n        var axisTensor = tfjs_1.scalar(axis, 'int32');\n        inputs.push(axisTensor);\n        var res = backend.executeSingleOutput('ConcatV2', opAttrs, inputs);\n        axisTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}