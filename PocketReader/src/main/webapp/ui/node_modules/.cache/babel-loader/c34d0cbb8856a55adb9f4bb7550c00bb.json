{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.unsortedSegmentSumConfig = {\n  kernelName: tfjs_1.UnsortedSegmentSum,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        x = _a.x,\n        segmentIds = _a.segmentIds;\n    var backend = args.backend;\n    var numSegments = args.attrs.numSegments;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tindices', 'int32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tnumsegments', 'int32')];\n    var numSegmentsT = tfjs_1.scalar(numSegments, 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.UnsortedSegmentSum, opAttrs, [x, segmentIds, numSegmentsT]);\n    numSegmentsT.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/UnsortedSegmentSum.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","unsortedSegmentSumConfig","kernelName","UnsortedSegmentSum","backendName","kernelFunc","args","_a","inputs","x","segmentIds","backend","numSegments","attrs","opAttrs","createTensorsTypeOpAttr","dtype","numSegmentsT","scalar","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,wBAAR,GAAmC;AAC/BC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,kBADY;AAE/BC,EAAAA,WAAW,EAAE,YAFkB;AAG/BC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,CAAC,GAAGF,EAAE,CAACE,CAA7B;AAAA,QAAgCC,UAAU,GAAGH,EAAE,CAACG,UAAhD;AACA,QAAIC,OAAO,GAAGL,IAAI,CAACK,OAAnB;AACA,QAAIC,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAWD,WAA7B;AACA,QAAIE,OAAO,GAAG,CACVd,uBAAuB,CAACe,uBAAxB,CAAgD,GAAhD,EAAqDN,CAAC,CAACO,KAAvD,CADU,EAEVhB,uBAAuB,CAACe,uBAAxB,CAAgD,UAAhD,EAA4D,OAA5D,CAFU,EAGVf,uBAAuB,CAACe,uBAAxB,CAAgD,cAAhD,EAAgE,OAAhE,CAHU,CAAd;AAKA,QAAIE,YAAY,GAAGnB,MAAM,CAACoB,MAAP,CAAcN,WAAd,EAA2B,OAA3B,CAAnB;AACA,QAAIO,GAAG,GAAGR,OAAO,CAACS,mBAAR,CAA4BtB,MAAM,CAACK,kBAAnC,EAAuDW,OAAvD,EAAgE,CAACL,CAAD,EAAIC,UAAJ,EAAgBO,YAAhB,CAAhE,CAAV;AACAA,IAAAA,YAAY,CAACI,OAAb;AACA,WAAOF,GAAP;AACH;AAhB8B,CAAnC","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.unsortedSegmentSumConfig = {\n    kernelName: tfjs_1.UnsortedSegmentSum,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, x = _a.x, segmentIds = _a.segmentIds;\n        var backend = args.backend;\n        var numSegments = args.attrs.numSegments;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tindices', 'int32'),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tnumsegments', 'int32')\n        ];\n        var numSegmentsT = tfjs_1.scalar(numSegments, 'int32');\n        var res = backend.executeSingleOutput(tfjs_1.UnsortedSegmentSum, opAttrs, [x, segmentIds, numSegmentsT]);\n        numSegmentsT.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}