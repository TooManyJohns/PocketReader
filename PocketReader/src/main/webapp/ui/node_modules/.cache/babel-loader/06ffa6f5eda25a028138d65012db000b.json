{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { getAllPokemon } from '../../services/PokemonService';\nimport { getModel } from '../../services/ModelService';\nimport logoImg from \"../../assets/pocketdexlogo.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport PokemonBox from \"../../components/PokemonBox/PokemonBox\";\nimport PokemonComparisonBox from \"../../components/PokemonComparisonBox/PokemonComparisonBox\";\nimport * as tf from '@tensorflow/tfjs';\n\nconst HomeScreen = () => {\n  _s();\n\n  var _pokemonList$, _pokemonList$2, _pokemonList$3, _pokemonList$4, _pokemonList$5, _pokemonList$6, _pokemonList$7, _pokemonList$8, _pokemonList$9, _pokemonList$10;\n\n  const [pokemonList, setPokemonList] = useState({\n    id: 0,\n    pokemonName: ''\n  });\n  const [filterShow, setFilterShow] = useState(false);\n  const [pokemonUploadImage, setPokemonUploadImage] = useState(\"\");\n  const [model, setModel] = useState(false);\n  const [predictionList, setPredictionList] = useState(false);\n  const canvasRef = useRef(null);\n  const [imageURL, setImageURl] = useState(null);\n  const TARGET_CLASSES = {\n    0: \"Bulbasaur\",\n    1: \"Charmander\",\n    2: \"Squirtle\"\n  }; // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon\n\n  useEffect(() => {\n    let mounted = true;\n    getAllPokemon().then(items => {\n      if (mounted) {\n        console.log(items);\n        setPokemonList(items);\n      }\n    });\n    getModel().then(items => {\n      if (mounted) {\n        console.log(\"Model loaded.\");\n        setModel(items);\n        console.log(items);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  console.log(`Is filter showing:  ${filterShow}`);\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleImgUpload = event => {\n    console.log(event.target.files[0].src);\n    setPokemonUploadImage(event.target.files[0]);\n    setPredictionList([]);\n  };\n\n  const drawImageOnCanvas = (image, canvas, ctx) => {\n    const naturalWidth = image.naturalWidth;\n    const naturalHeight = image.naturalHeight;\n    canvas.width = image.width;\n    canvas.height = image.height;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const isLandscape = naturalWidth > naturalHeight;\n    ctx.drawImage(image, isLandscape ? (naturalWidth - naturalHeight) / 2 : 0, isLandscape ? 0 : (naturalHeight - naturalWidth) / 2, isLandscape ? naturalHeight : naturalWidth, isLandscape ? naturalHeight : naturalWidth, 0, 0, ctx.canvas.width, ctx.canvas.height);\n  };\n\n  const onImageChange = async ({\n    target\n  }) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    drawImageOnCanvas(target, canvas, ctx);\n    const modelNew = await tf.loadLayersModel('./model/model.json');\n    const predictions = await modelNew.predict(canvas).data();\n    console.log(predictions);\n    setPredictionList(predictions);\n  };\n\n  const handlePredictClick = async event => {\n    if (!model) {\n      alert(\"The model must be loaded first\");\n      return;\n    }\n\n    if (!pokemonUploadImage) {\n      alert(\"Please select an image first\");\n      return;\n    }\n\n    var img = new Image();\n    img.src = URL.createObjectURL(pokemonUploadImage);\n\n    img.onload = () => {\n      // Pre-process the image\n      console.log(\"Loading image...\");\n      let tensor = tf.browser.fromPixels(img).resizeNearestNeighbor([224, 224]) // change the image size\n      .expandDims().toFloat().reverse(-1); // RGB -> BGR\n\n      let predictions = model.predict(tensor).data();\n      console.log(predictions[0]);\n      console.log('Hey its done');\n      let top5 = Array.from(predictions).map(function (p, i) {\n        // this is Array.map\n        return {\n          probability: p,\n          className: TARGET_CLASSES[i] // we are selecting the value from the obj\n\n        };\n      }).sort(function (a, b) {\n        return b.probability - a.probability;\n      }).slice(0, 2);\n      setPredictionList([]);\n      top5.forEach(function (p) {\n        setPredictionList(predictionList.append(`<li>${p.className}: ${p.probability.toFixed(6)}</li>`));\n      });\n    };\n  };\n\n  const handleUploadChange = ({\n    target\n  }) => {\n    setImageURl(URL.createObjectURL(target.files[0]));\n  };\n\n  const renderInput = () => /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: handleUploadChange,\n    accept: \"image/x-png,image/gif,image/jpeg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n\n  const renderPreview = () => /*#__PURE__*/_jsxDEV(\"canvas\", {\n    className: \"classified-image\",\n    ref: canvasRef,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"preview\",\n      onLoad: onImageChange,\n      src: imageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: [// Show loading if model hasnt loaded yet\n    !model && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }, this), model && /*#__PURE__*/_jsxDEV(Modal, {\n      children: [/*#__PURE__*/_jsxDEV(PokemonListTopCard, {\n        children: [/*#__PURE__*/_jsxDEV(PokemonListLogoCard, {\n          children: [// Show logo image if we haven't uploaded an image to compare yet\n          !pokemonUploadImage && /*#__PURE__*/_jsxDEV(Logo, {\n            imageUrl: logoImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), pokemonUploadImage && /*#__PURE__*/_jsxDEV(ComparisonBoxCtn, {\n            children: [/*#__PURE__*/_jsxDEV(PokemonComparisonBox, {\n              id: \"myimg\",\n              pokemonImgUrl: pokemonUploadImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PokemonComparisonBox, {\n              pokemonS3Url: `https://pocket-dex-bucket.s3.us-east-2.amazonaws.com/${(_pokemonList$ = pokemonList[0]) === null || _pokemonList$ === void 0 ? void 0 : _pokemonList$.keyName}.png`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PokemonListSearchCard, {\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            onClick: () => setFilterShow(!filterShow),\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n            onClick: handlePredictClick,\n            children: \"Predict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n            onClick: handleClick,\n            children: \"Search via Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: hiddenFileInput,\n            onChange: handleImgUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), // Show filter selection if we click filter button\n      filterShow && /*#__PURE__*/_jsxDEV(FilterTableCard, {\n        children: [/*#__PURE__*/_jsxDEV(FilterTableSubsectionButton, {\n          children: \"Filter Eyes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FilterTableSubsectionButton, {\n          children: \"Filter Legs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FilterTableSubsectionButton, {\n          children: \"Filter Arms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FilterTableSubsectionButton, {\n          children: \"Filter Head\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(PokemonListMainCard, {\n        children: [/*#__PURE__*/_jsxDEV(PokemonBox, {\n          pokemonName: (_pokemonList$2 = pokemonList[0]) === null || _pokemonList$2 === void 0 ? void 0 : _pokemonList$2.pokemonName,\n          pokemonNumber: (_pokemonList$3 = pokemonList[0]) === null || _pokemonList$3 === void 0 ? void 0 : _pokemonList$3.id,\n          pokemonS3Url: (_pokemonList$4 = pokemonList[0]) === null || _pokemonList$4 === void 0 ? void 0 : _pokemonList$4.keyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PokemonBox, {\n          pokemonName: (_pokemonList$5 = pokemonList[1]) === null || _pokemonList$5 === void 0 ? void 0 : _pokemonList$5.pokemonName,\n          pokemonNumber: (_pokemonList$6 = pokemonList[1]) === null || _pokemonList$6 === void 0 ? void 0 : _pokemonList$6.id,\n          pokemonS3Url: (_pokemonList$7 = pokemonList[1]) === null || _pokemonList$7 === void 0 ? void 0 : _pokemonList$7.keyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PokemonBox, {\n          pokemonName: (_pokemonList$8 = pokemonList[2]) === null || _pokemonList$8 === void 0 ? void 0 : _pokemonList$8.pokemonName,\n          pokemonNumber: (_pokemonList$9 = pokemonList[2]) === null || _pokemonList$9 === void 0 ? void 0 : _pokemonList$9.id,\n          pokemonS3Url: (_pokemonList$10 = pokemonList[2]) === null || _pokemonList$10 === void 0 ? void 0 : _pokemonList$10.keyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), !model ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderInput(), imageURL && renderPreview(), !!predictionList.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: predictionList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeScreen, \"/ak5ZzT+KezgmBqygCeAAQtf0RM=\");\n\n_c = HomeScreen;\nexport default HomeScreen; //Temp styler for containing comparison of images\n\nconst ComparisonBoxCtn = styled.div`\n  flex: 1;\n  display:flex;\n  flex-direction: row;\n`;\n_c2 = ComparisonBoxCtn;\nconst BottomHeader = styled.div`\n  flex: 1;\n  background-color: #363636;\n  display:flex;\n  width:100%;\n`;\n_c3 = BottomHeader;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: #BB0F15;\n  display: flex;\n  align-items:center;\n  flex-direction: column;\n`; //We establish flex 45 as it adds up the header and\n//modal in login screen, providing consistency for the bottomeheader\n//component\n\n_c4 = Background;\nconst Modal = styled.div`\n  background-color: blue;\n  min-width: 35em;\n  width: 80%;\n  padding-bottom: 30px;\n  padding-top: 25px;\n  padding-right: 30px;\n  padding-left: 30px;\n  flex-direction: column; \n  flex: 45; \n  display:flex;\n  background-color: #AE0E14;\n`; // Holds title, search bar\n\n_c5 = Modal;\nconst PokemonListTopCard = styled.div`\n  flex-direction: column;\n  display:flex;\n  flex: 1;\n`; // Holds logo\n\n_c6 = PokemonListTopCard;\nconst PokemonListLogoCard = styled.div`\n  justify-content: center;\n  display: flex;\n  margin-bottom: 10px;\n`; // Holds search bar\n\n_c7 = PokemonListLogoCard;\nconst PokemonListSearchCard = styled.div`\n  flex-direction: row;\n  flex: 2;\n  background-color: #363636;\n  padding: 10px;\n  justify-content: center;\n  flex-direction: row; \n  display:flex;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`; // Stores the list of Pokemon that are filtered by the PokemonListtitleCard's Search Card\n\n_c8 = PokemonListSearchCard;\nconst PokemonListMainCard = styled.div`\n  width: 100%;\n  height: 70%;\n  background-size: cover;\n  justify-content: left;\n  background-color: lightblue;\n  display: flex;\n  flex-direction: row;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: inset 0px 0px 0px 5px #363636;\n\n`;\n_c9 = PokemonListMainCard;\nconst TextInput = styled.input`\n  margin-bottom: 5px;\n  margin-top: 5px;\n  margin-right: 10px;\n  margin-left: 10px;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  outline: none;\n  border-radius: 15px;\n  color: black;\n  font-family: Lucida Grande;\n  font-size: 1.5em;\n  padding:10px;\n  ::placeholder {\n    color: grey;\n    font-family: Lucida Grande;\n  }\n`;\nconst UploadButton = styled.button`\n  font-size: 1.2em;\n  text-align: center;\n  border: 3px dark red;\n  background-color: grey;\n  font-family: Lucida Grande;\n  color: white;\n  border-radius: 15px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  height: 100%;\n  width: 100%;\n`;\n_c10 = UploadButton;\nconst FilterButton = styled.button`\n  font-size: 1.2em;\n  text-align: center;\n  border: 3px dark red;\n  background-color: grey;\n  font-family: Lucida Grande;\n  color: white;\n  border-radius: 15px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  height: 100%;\n  width: 100%;\n`;\n_c11 = FilterButton;\nconst FilterTableCard = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: row;\n  background-color: white;\n  flex-wrap: wrap;\n  box-shadow: inset 0px 0px 0px 5px #363636;\n\n`; // Flex-basis set to % to eliminate need for fitting an extra item.\n\n_c12 = FilterTableCard;\nconst FilterTableSubsectionButton = styled.button`\n  flex: 0 29.2%;\n  margin: 2%;\n  height: 30px;\n  background-color: grey;\n  color: white;\n  font-family: Lucida Grande;\n  border: 2 black;\n  border-radius: 5px;\n`;\n_c13 = FilterTableSubsectionButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"ComparisonBoxCtn\");\n$RefreshReg$(_c3, \"BottomHeader\");\n$RefreshReg$(_c4, \"Background\");\n$RefreshReg$(_c5, \"Modal\");\n$RefreshReg$(_c6, \"PokemonListTopCard\");\n$RefreshReg$(_c7, \"PokemonListLogoCard\");\n$RefreshReg$(_c8, \"PokemonListSearchCard\");\n$RefreshReg$(_c9, \"PokemonListMainCard\");\n$RefreshReg$(_c10, \"UploadButton\");\n$RefreshReg$(_c11, \"FilterButton\");\n$RefreshReg$(_c12, \"FilterTableCard\");\n$RefreshReg$(_c13, \"FilterTableSubsectionButton\");","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js"],"names":["React","useState","useEffect","useRef","styled","getAllPokemon","getModel","logoImg","Logo","PokemonBox","PokemonComparisonBox","tf","HomeScreen","pokemonList","setPokemonList","id","pokemonName","filterShow","setFilterShow","pokemonUploadImage","setPokemonUploadImage","model","setModel","predictionList","setPredictionList","canvasRef","imageURL","setImageURl","TARGET_CLASSES","mounted","then","items","console","log","hiddenFileInput","handleClick","event","current","click","handleImgUpload","target","files","src","drawImageOnCanvas","image","canvas","ctx","naturalWidth","naturalHeight","width","height","clearRect","isLandscape","drawImage","onImageChange","getContext","modelNew","loadLayersModel","predictions","predict","data","handlePredictClick","alert","img","Image","URL","createObjectURL","onload","tensor","browser","fromPixels","resizeNearestNeighbor","expandDims","toFloat","reverse","top5","Array","from","map","p","i","probability","className","sort","a","b","slice","forEach","append","toFixed","handleUploadChange","renderInput","renderPreview","keyName","display","length","ComparisonBoxCtn","div","BottomHeader","Background","Modal","PokemonListTopCard","PokemonListLogoCard","PokemonListSearchCard","PokemonListMainCard","TextInput","input","UploadButton","button","FilterButton","FilterTableCard","FilterTableSubsectionButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { getAllPokemon } from '../../services/PokemonService'\nimport { getModel } from '../../services/ModelService'\nimport logoImg from \"../../assets/pocketdexlogo.png\";\n\nimport Logo from \"../../components/Logo/Logo\";\nimport PokemonBox from \"../../components/PokemonBox/PokemonBox\";\nimport PokemonComparisonBox from \"../../components/PokemonComparisonBox/PokemonComparisonBox\";\nimport * as tf from '@tensorflow/tfjs'\n\nconst HomeScreen = () => {\n  const [pokemonList, setPokemonList] = useState({ id: 0, pokemonName: '' });\n  const [filterShow, setFilterShow] = useState(false);\n  const [pokemonUploadImage, setPokemonUploadImage] = useState(\"\");\n  const [model, setModel] = useState(false);\n  const [predictionList, setPredictionList] = useState(false);\n  const canvasRef = useRef(null);\n  const [imageURL, setImageURl] = useState(null);\n\n\n  const TARGET_CLASSES = {\n    0: \"Bulbasaur\",\n    1: \"Charmander\",\n    2: \"Squirtle\"\n  };\n  // Similar to component will mount, in order to prevent it from rendering beforehand, \n  // put it in the fetchPokemonList async function above but with current implementation \n  //we can have it display data as soon\n  useEffect(() => {\n    let mounted = true;\n    getAllPokemon()\n      .then(items => {\n        if (mounted) {\n          console.log(items)\n          setPokemonList(items)\n        }\n      })\n    getModel()\n      .then(items => {\n        if (mounted) {\n          console.log( \"Model loaded.\" );\n          setModel(items)\n          console.log(items)\n        }\n    })\n    \n    \n\n    return () => mounted = false;\n  }, [])\n  console.log(`Is filter showing:  ${filterShow}`);\n\n  const hiddenFileInput = React.useRef(null);\n  \n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleImgUpload = (event) => {\n    console.log(event.target.files[0].src);\n    setPokemonUploadImage(event.target.files[0]);\n    setPredictionList([]);\n  };\n\n  const drawImageOnCanvas = (image, canvas, ctx) => {\n    const naturalWidth = image.naturalWidth;\n    const naturalHeight = image.naturalHeight;\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const isLandscape = naturalWidth > naturalHeight;\n    ctx.drawImage(\n      image,\n      isLandscape ? (naturalWidth - naturalHeight) / 2 : 0,\n      isLandscape ? 0 : (naturalHeight - naturalWidth) / 2,\n      isLandscape ? naturalHeight : naturalWidth,\n      isLandscape ? naturalHeight : naturalWidth,\n      0,\n      0,\n      ctx.canvas.width,\n      ctx.canvas.height\n    );\n  };\n\n  const onImageChange = async ({ target }) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    drawImageOnCanvas(target, canvas, ctx);\n\n    const modelNew = await tf.loadLayersModel('./model/model.json');\n\n    const predictions = await modelNew.predict(canvas).data();\n    console.log(predictions)\n    setPredictionList(predictions);\n  };\n\n  const handlePredictClick = async event => {\n    if (!model) { alert(\"The model must be loaded first\"); return; }\n    if (!pokemonUploadImage) { alert(\"Please select an image first\"); return; }\n\n    var img = new Image();\n    img.src = URL.createObjectURL(pokemonUploadImage)\n  \n    img.onload = () => {\n    // Pre-process the image\n    console.log( \"Loading image...\" );\n    let tensor = tf.browser.fromPixels(img)\n      .resizeNearestNeighbor([224, 224]) // change the image size\n      .expandDims()\n      .toFloat()\n      .reverse(-1); // RGB -> BGR\n    let predictions = model.predict(tensor).data();\n    console.log(predictions[0]);\n    console.log('Hey its done');\n    let top5 = Array.from(predictions)\n      .map(function (p, i) { // this is Array.map\n        return {\n          probability: p,\n          className: TARGET_CLASSES[i] // we are selecting the value from the obj\n        };\n      }).sort(function (a, b) {\n        return b.probability - a.probability;\n      }).slice(0, 2);\n\n    setPredictionList([]);\n    top5.forEach(function (p) {\n      setPredictionList(predictionList.append(`<li>${p.className}: ${p.probability.toFixed(6)}</li>`));\n      });\n    }\n  };\n  const handleUploadChange = ({ target }) => {\n    setImageURl(URL.createObjectURL(target.files[0]));\n  };\n  const renderInput = () => (\n    <input\n      type=\"file\"\n      onChange={handleUploadChange}\n      accept=\"image/x-png,image/gif,image/jpeg\"\n    />\n  );\n\n  const renderPreview = () => (\n    <canvas className=\"classified-image\" ref={canvasRef}>\n      <img alt=\"preview\" onLoad={onImageChange} src={imageURL} />\n    </canvas>\n  );\n\n\n\n  return (\n    <Background>\n            {\n              // Show loading if model hasnt loaded yet\n              !model && \n              <div>LOADING!</div>\n            }\n            {\n              model &&    \n      <Modal>\n          <PokemonListTopCard>\n            <PokemonListLogoCard>\n            {\n              // Show logo image if we haven't uploaded an image to compare yet\n              !pokemonUploadImage &&\n              <Logo imageUrl={logoImg}></Logo>\n            }\n            {\n              pokemonUploadImage &&\n              <ComparisonBoxCtn>\n              <PokemonComparisonBox id={\"myimg\"} pokemonImgUrl={pokemonUploadImage}></PokemonComparisonBox>\n              <PokemonComparisonBox pokemonS3Url={`https://pocket-dex-bucket.s3.us-east-2.amazonaws.com/${pokemonList[0]?.keyName}.png`}></PokemonComparisonBox>\n              </ComparisonBoxCtn>\n            }\n\n            \n            </PokemonListLogoCard>\n            <PokemonListSearchCard>\n              <FilterButton onClick={\n                () => setFilterShow(!filterShow)\n              }>Filter</FilterButton>\n              <FilterButton onClick={\n                handlePredictClick\n              }>Predict</FilterButton>\n              <UploadButton\n              onClick={handleClick}>Search via Upload</UploadButton>\n              <input type=\"file\"\n             ref={hiddenFileInput}\n             onChange={handleImgUpload}\n             style={{display:'none'}} \n             /> \n            </PokemonListSearchCard>\n          </PokemonListTopCard>\n          {\n              // Show filter selection if we click filter button\n              filterShow &&\n              <FilterTableCard>\n                <FilterTableSubsectionButton>\n                  Filter Eyes\n                </FilterTableSubsectionButton>\n                <FilterTableSubsectionButton>\n                  Filter Legs\n                </FilterTableSubsectionButton>\n                <FilterTableSubsectionButton>\n                  Filter Arms\n                </FilterTableSubsectionButton>\n                <FilterTableSubsectionButton>\n                  Filter Head\n                </FilterTableSubsectionButton>\n              </FilterTableCard>\n            }\n          <PokemonListMainCard>\n            <PokemonBox pokemonName={pokemonList[0]?.pokemonName} pokemonNumber={pokemonList[0]?.id} pokemonS3Url={pokemonList[0]?.keyName}></PokemonBox>\n            <PokemonBox pokemonName={pokemonList[1]?.pokemonName} pokemonNumber={pokemonList[1]?.id} pokemonS3Url={pokemonList[1]?.keyName}></PokemonBox>\n            <PokemonBox pokemonName={pokemonList[2]?.pokemonName} pokemonNumber={pokemonList[2]?.id} pokemonS3Url={pokemonList[2]?.keyName}></PokemonBox>\n            {!model ? (\n        <div/>\n      ) : (\n        <>\n          {renderInput()}\n          {imageURL && renderPreview()}\n          {!!predictionList.length && <div>{predictionList}</div>}\n        </>\n      )}\n           </PokemonListMainCard>\n      </Modal>\n       }\n      <BottomHeader></BottomHeader>\n      \n    </Background>\n  );\n}\n\nexport default HomeScreen;\n\n//Temp styler for containing comparison of images\nconst ComparisonBoxCtn = styled.div`\n  flex: 1;\n  display:flex;\n  flex-direction: row;\n`\n\n\nconst BottomHeader = styled.div`\n  flex: 1;\n  background-color: #363636;\n  display:flex;\n  width:100%;\n`\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: #BB0F15;\n  display: flex;\n  align-items:center;\n  flex-direction: column;\n`\n\n//We establish flex 45 as it adds up the header and\n//modal in login screen, providing consistency for the bottomeheader\n//component\nconst Modal = styled.div`\n  background-color: blue;\n  min-width: 35em;\n  width: 80%;\n  padding-bottom: 30px;\n  padding-top: 25px;\n  padding-right: 30px;\n  padding-left: 30px;\n  flex-direction: column; \n  flex: 45; \n  display:flex;\n  background-color: #AE0E14;\n`\n\n// Holds title, search bar\nconst PokemonListTopCard = styled.div`\n  flex-direction: column;\n  display:flex;\n  flex: 1;\n`\n// Holds logo\nconst PokemonListLogoCard = styled.div`\n  justify-content: center;\n  display: flex;\n  margin-bottom: 10px;\n`\n\n// Holds search bar\nconst PokemonListSearchCard = styled.div`\n  flex-direction: row;\n  flex: 2;\n  background-color: #363636;\n  padding: 10px;\n  justify-content: center;\n  flex-direction: row; \n  display:flex;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`\n\n\n// Stores the list of Pokemon that are filtered by the PokemonListtitleCard's Search Card\nconst PokemonListMainCard = styled.div`\n  width: 100%;\n  height: 70%;\n  background-size: cover;\n  justify-content: left;\n  background-color: lightblue;\n  display: flex;\n  flex-direction: row;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: inset 0px 0px 0px 5px #363636;\n\n`\n\nconst TextInput = styled.input`\n  margin-bottom: 5px;\n  margin-top: 5px;\n  margin-right: 10px;\n  margin-left: 10px;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  outline: none;\n  border-radius: 15px;\n  color: black;\n  font-family: Lucida Grande;\n  font-size: 1.5em;\n  padding:10px;\n  ::placeholder {\n    color: grey;\n    font-family: Lucida Grande;\n  }\n`;\n\nconst UploadButton = styled.button`\n  font-size: 1.2em;\n  text-align: center;\n  border: 3px dark red;\n  background-color: grey;\n  font-family: Lucida Grande;\n  color: white;\n  border-radius: 15px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  height: 100%;\n  width: 100%;\n`;\n\nconst FilterButton = styled.button`\n  font-size: 1.2em;\n  text-align: center;\n  border: 3px dark red;\n  background-color: grey;\n  font-family: Lucida Grande;\n  color: white;\n  border-radius: 15px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  height: 100%;\n  width: 100%;\n`;\n\nconst FilterTableCard = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: row;\n  background-color: white;\n  flex-wrap: wrap;\n  box-shadow: inset 0px 0px 0px 5px #363636;\n\n`\n\n// Flex-basis set to % to eliminate need for fitting an extra item.\nconst FilterTableSubsectionButton = styled.button`\n  flex: 0 29.2%;\n  margin: 2%;\n  height: 30px;\n  background-color: grey;\n  color: white;\n  font-family: Lucida Grande;\n  border: 2 black;\n  border-radius: 5px;\n`\n\n"]},"metadata":{},"sourceType":"module"}