{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.unpackConfig = {\n  kernelName: tfjs_1.Unpack,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var value = args.inputs.value;\n    var backend = args.backend;\n    var axis = args.attrs.axis;\n\n    if (axis < 0) {\n      axis += value.shape.length;\n    }\n\n    if (axis >= value.shape.length) {\n      throw new Error(\"Invalid axis supplied: \" + axis + \" shape length: \" + value.shape.length);\n    }\n\n    var num = value.shape[axis];\n    var opAttrs = [{\n      name: 'num',\n      type: backend.binding.TF_ATTR_INT,\n      value: num\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', value.dtype), {\n      name: 'axis',\n      type: backend.binding.TF_ATTR_INT,\n      value: axis\n    }];\n    return backend.executeMultipleOutputs(tfjs_1.Unpack, opAttrs, [value], num);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Unpack.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","unpackConfig","kernelName","Unpack","backendName","kernelFunc","args","inputs","backend","axis","attrs","shape","length","Error","num","opAttrs","name","type","binding","TF_ATTR_INT","createTensorsTypeOpAttr","dtype","executeMultipleOutputs"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIT,KAAK,GAAGS,IAAI,CAACC,MAAL,CAAYV,KAAxB;AACA,QAAIW,OAAO,GAAGF,IAAI,CAACE,OAAnB;AACA,QAAIC,IAAI,GAAGH,IAAI,CAACI,KAAL,CAAWD,IAAtB;;AACA,QAAIA,IAAI,GAAG,CAAX,EAAc;AACVA,MAAAA,IAAI,IAAIZ,KAAK,CAACc,KAAN,CAAYC,MAApB;AACH;;AACD,QAAIH,IAAI,IAAIZ,KAAK,CAACc,KAAN,CAAYC,MAAxB,EAAgC;AAC5B,YAAM,IAAIC,KAAJ,CAAU,4BAA4BJ,IAA5B,GAAmC,iBAAnC,GAAuDZ,KAAK,CAACc,KAAN,CAAYC,MAA7E,CAAN;AACH;;AACD,QAAIE,GAAG,GAAGjB,KAAK,CAACc,KAAN,CAAYF,IAAZ,CAAV;AACA,QAAIM,OAAO,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,IAAI,EAAET,OAAO,CAACU,OAAR,CAAgBC,WAArC;AAAkDtB,MAAAA,KAAK,EAAEiB;AAAzD,KADU,EAEVd,uBAAuB,CAACoB,uBAAxB,CAAgD,GAAhD,EAAqDvB,KAAK,CAACwB,KAA3D,CAFU,EAGV;AAAEL,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAET,OAAO,CAACU,OAAR,CAAgBC,WAAtC;AAAmDtB,MAAAA,KAAK,EAAEY;AAA1D,KAHU,CAAd;AAKA,WAAOD,OAAO,CAACc,sBAAR,CAA+BxB,MAAM,CAACK,MAAtC,EAA8CY,OAA9C,EAAuD,CAAClB,KAAD,CAAvD,EAAgEiB,GAAhE,CAAP;AACH;AApBkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.unpackConfig = {\n    kernelName: tfjs_1.Unpack,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var value = args.inputs.value;\n        var backend = args.backend;\n        var axis = args.attrs.axis;\n        if (axis < 0) {\n            axis += value.shape.length;\n        }\n        if (axis >= value.shape.length) {\n            throw new Error(\"Invalid axis supplied: \" + axis + \" shape length: \" + value.shape.length);\n        }\n        var num = value.shape[axis];\n        var opAttrs = [\n            { name: 'num', type: backend.binding.TF_ATTR_INT, value: num },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', value.dtype),\n            { name: 'axis', type: backend.binding.TF_ATTR_INT, value: axis }\n        ];\n        return backend.executeMultipleOutputs(tfjs_1.Unpack, opAttrs, [value], num);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}