{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport ProfilePicture from \"../../components/ProfilePicture/ProfilePicture\";\nimport { getAllPokemon } from '../../services/PokemonService';\n\nconst HomeScreen = () => {\n  _s();\n\n  var user = firebase.auth().currentUser;\n  var name, email, uid, profilepicture;\n  const [pokemonList, setPokemonList] = useState([]);\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    profilepicture = user.profilepicture;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n\n  getAllPokemon = () => {\n    getAllPokemon().then(pokemon => {\n      console.log(pokemon);\n      this.setPokemonList(pokemon);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: /*#__PURE__*/_jsxDEV(DivOne, {\n      children: /*#__PURE__*/_jsxDEV(DivTwo, {\n        children: pokemonList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomeScreen, \"VmFJE3EtziKToXlq9if5qeag1sQ=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Background;\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DivOne;\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`;\n_c4 = DivTwo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"DivOne\");\n$RefreshReg$(_c4, \"DivTwo\");","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/src/views/HomeScreen/HomeScreen.js"],"names":["React","useState","useEffect","styled","firebase","ProfilePicture","getAllPokemon","HomeScreen","user","auth","currentUser","name","email","uid","profilepicture","pokemonList","setPokemonList","displayName","then","pokemon","console","log","Background","div","DivOne","DivTwo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,OAAOC,cAAP,MAA2B,gDAA3B;AAEA,SAASC,aAAT,QAA8B,+BAA9B;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,MAAIC,IAAI,GAAGJ,QAAQ,CAACK,IAAT,GAAgBC,WAA3B;AACA,MAAIC,IAAJ,EAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,cAAtB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;;AAGA,MAAIO,IAAI,IAAI,IAAZ,EAAkB;AAChBG,IAAAA,IAAI,GAAGH,IAAI,CAACS,WAAZ;AACAL,IAAAA,KAAK,GAAGJ,IAAI,CAACI,KAAb;AACAE,IAAAA,cAAc,GAAGN,IAAI,CAACM,cAAtB;AACAD,IAAAA,GAAG,GAAGL,IAAI,CAACK,GAAX,CAJgB,CAIC;AACA;AACA;AAClB;;AAGDP,EAAAA,aAAa,GAAG,MAAM;AACpBA,IAAAA,aAAa,GACVY,IADH,CACQC,OAAO,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKH,cAAL,CAAoBG,OAApB;AACD,KAJH;AAKD,GAND;;AASE,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlCH;;GAAMR,U;;KAAAA,U;AAoCJ,eAAeA,UAAf;AAGF,MAAMe,UAAU,GAAGnB,MAAM,CAACoB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U;AAYN,MAAME,MAAM,GAAGrB,MAAM,CAACoB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,M;AAYN,MAAMC,MAAM,GAAGtB,MAAM,CAACoB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,M","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport firebase from 'firebase/app'\nimport 'firebase/auth';\n\nimport ProfilePicture from \"../../components/ProfilePicture/ProfilePicture\";\n\nimport { getAllPokemon } from '../../services/PokemonService'\n\n\nconst HomeScreen = () => {\n  var user = firebase.auth().currentUser;\n  var name, email, uid, profilepicture;\n  const [pokemonList, setPokemonList] = useState([]);\n\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    profilepicture = user.profilepicture;\n    uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\n                     // this value to authenticate with your backend server, if\n                     // you have one. Use User.getToken() instead.\n  }\n\n\n  getAllPokemon = () => {\n    getAllPokemon()\n      .then(pokemon => {\n        console.log(pokemon)\n        this.setPokemonList(pokemon)\n      });\n  }\n\n\n    return (\n      <Background>\n        <DivOne>        \n          <DivTwo>  \n            {pokemonList}        \n          </DivTwo>\n        </DivOne>\n      </Background>\n    );\n  }\n\n  export default HomeScreen;\n\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  align-items: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n`\nconst DivOne = styled.div`\n  width: 70%;\n  height: 100%;\n  position: center;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n`\n\nconst DivTwo = styled.div`\n  width: 10%;\n  height: 100%;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  background-color: green;\n  display: flex;\n  flex-direction: row;\n`\n"]},"metadata":{},"sourceType":"module"}