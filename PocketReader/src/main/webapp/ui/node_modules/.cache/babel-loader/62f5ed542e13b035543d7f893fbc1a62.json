{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.uniqueConfig = {\n  kernelName: tfjs_1.Unique,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs.axis,\n        axis = _a === void 0 ? 0 : _a;\n    var axisTensor = tfjs_1.tensor1d([axis], 'int32');\n\n    try {\n      var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Taxis', 'int32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('out_idx', 'int32')];\n      var inputs = [x, axisTensor];\n      return backend.executeMultipleOutputs('UniqueV2', opAttrs, inputs, 2);\n    } finally {\n      axisTensor.dispose();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Unique.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","uniqueConfig","kernelName","Unique","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","axis","axisTensor","tensor1d","opAttrs","createTensorsTypeOpAttr","dtype","executeMultipleOutputs","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAL,CAAWC,IAApB;AAAA,QAA0BA,IAAI,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAArD;AACA,QAAIG,UAAU,GAAGf,MAAM,CAACgB,QAAP,CAAgB,CAACF,IAAD,CAAhB,EAAwB,OAAxB,CAAjB;;AACA,QAAI;AACA,UAAIG,OAAO,GAAG,CACVf,uBAAuB,CAACgB,uBAAxB,CAAgD,GAAhD,EAAqDT,CAAC,CAACU,KAAvD,CADU,EAEVjB,uBAAuB,CAACgB,uBAAxB,CAAgD,OAAhD,EAAyD,OAAzD,CAFU,EAGVhB,uBAAuB,CAACgB,uBAAxB,CAAgD,SAAhD,EAA2D,OAA3D,CAHU,CAAd;AAKA,UAAIR,MAAM,GAAG,CAACD,CAAD,EAAIM,UAAJ,CAAb;AACA,aAAOJ,OAAO,CAACS,sBAAR,CAA+B,UAA/B,EAA2CH,OAA3C,EAAoDP,MAApD,EAA4D,CAA5D,CAAP;AACH,KARD,SASQ;AACJK,MAAAA,UAAU,CAACM,OAAX;AACH;AACJ;AApBkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.uniqueConfig = {\n    kernelName: tfjs_1.Unique,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs.axis, axis = _a === void 0 ? 0 : _a;\n        var axisTensor = tfjs_1.tensor1d([axis], 'int32');\n        try {\n            var opAttrs = [\n                nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n                nodejs_kernel_backend_1.createTensorsTypeOpAttr('Taxis', 'int32'),\n                nodejs_kernel_backend_1.createTensorsTypeOpAttr('out_idx', 'int32')\n            ];\n            var inputs = [x, axisTensor];\n            return backend.executeMultipleOutputs('UniqueV2', opAttrs, inputs, 2);\n        }\n        finally {\n            axisTensor.dispose();\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}