{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.rangeConfig = {\n  kernelName: tfjs_1.Range,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var backend = args.backend;\n    var _a = args.attrs,\n        start = _a.start,\n        stop = _a.stop,\n        dtype = _a.dtype;\n    var step = args.attrs.step; // TensorFlow.js specific allowances\n\n    var sameStartStop = start === stop;\n    var increasingRangeNegativeStep = start < stop && step < 0;\n    var decreasingRangePositiveStep = stop < start && step > 1;\n\n    if (sameStartStop || increasingRangeNegativeStep || decreasingRangePositiveStep) {\n      return tfjs_1.zeros([0], dtype);\n    }\n\n    if (stop < start && step === 1) {\n      // Auto adjust the step's sign if it hasn't been set\n      // (or was set to 1)\n      step = -1;\n    }\n\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', dtype)];\n    var startTensor = tfjs_1.scalar(start);\n    var stopTensor = tfjs_1.scalar(stop);\n    var stepTensor = tfjs_1.scalar(step);\n    var res = backend.executeSingleOutput(tfjs_1.Range, opAttrs, [startTensor, stopTensor, stepTensor]);\n    var castedRes = res.cast(dtype);\n    startTensor.dispose();\n    stopTensor.dispose();\n    stepTensor.dispose();\n    res.dispose();\n    return castedRes;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Range.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","rangeConfig","kernelName","Range","backendName","kernelFunc","args","backend","_a","attrs","start","stop","dtype","step","sameStartStop","increasingRangeNegativeStep","decreasingRangePositiveStep","zeros","opAttrs","createTensorsTypeOpAttr","startTensor","scalar","stopTensor","stepTensor","res","executeSingleOutput","castedRes","cast","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,WAAR,GAAsB;AAClBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,KADD;AAElBC,EAAAA,WAAW,EAAE,YAFK;AAGlBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,QAAIC,EAAE,GAAGF,IAAI,CAACG,KAAd;AAAA,QAAqBC,KAAK,GAAGF,EAAE,CAACE,KAAhC;AAAA,QAAuCC,IAAI,GAAGH,EAAE,CAACG,IAAjD;AAAA,QAAuDC,KAAK,GAAGJ,EAAE,CAACI,KAAlE;AACA,QAAIC,IAAI,GAAGP,IAAI,CAACG,KAAL,CAAWI,IAAtB,CAHwB,CAIxB;;AACA,QAAIC,aAAa,GAAGJ,KAAK,KAAKC,IAA9B;AACA,QAAII,2BAA2B,GAAGL,KAAK,GAAGC,IAAR,IAAgBE,IAAI,GAAG,CAAzD;AACA,QAAIG,2BAA2B,GAAGL,IAAI,GAAGD,KAAP,IAAgBG,IAAI,GAAG,CAAzD;;AACA,QAAIC,aAAa,IAAIC,2BAAjB,IACAC,2BADJ,EACiC;AAC7B,aAAOlB,MAAM,CAACmB,KAAP,CAAa,CAAC,CAAD,CAAb,EAAkBL,KAAlB,CAAP;AACH;;AACD,QAAID,IAAI,GAAGD,KAAP,IAAgBG,IAAI,KAAK,CAA7B,EAAgC;AAC5B;AACA;AACAA,MAAAA,IAAI,GAAG,CAAC,CAAR;AACH;;AACD,QAAIK,OAAO,GAAG,CAAClB,uBAAuB,CAACmB,uBAAxB,CAAgD,MAAhD,EAAwDP,KAAxD,CAAD,CAAd;AACA,QAAIQ,WAAW,GAAGtB,MAAM,CAACuB,MAAP,CAAcX,KAAd,CAAlB;AACA,QAAIY,UAAU,GAAGxB,MAAM,CAACuB,MAAP,CAAcV,IAAd,CAAjB;AACA,QAAIY,UAAU,GAAGzB,MAAM,CAACuB,MAAP,CAAcR,IAAd,CAAjB;AACA,QAAIW,GAAG,GAAGjB,OAAO,CAACkB,mBAAR,CAA4B3B,MAAM,CAACK,KAAnC,EAA0Ce,OAA1C,EAAmD,CAACE,WAAD,EAAcE,UAAd,EAA0BC,UAA1B,CAAnD,CAAV;AACA,QAAIG,SAAS,GAAGF,GAAG,CAACG,IAAJ,CAASf,KAAT,CAAhB;AACAQ,IAAAA,WAAW,CAACQ,OAAZ;AACAN,IAAAA,UAAU,CAACM,OAAX;AACAL,IAAAA,UAAU,CAACK,OAAX;AACAJ,IAAAA,GAAG,CAACI,OAAJ;AACA,WAAOF,SAAP;AACH;AA/BiB,CAAtB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.rangeConfig = {\n    kernelName: tfjs_1.Range,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var backend = args.backend;\n        var _a = args.attrs, start = _a.start, stop = _a.stop, dtype = _a.dtype;\n        var step = args.attrs.step;\n        // TensorFlow.js specific allowances\n        var sameStartStop = start === stop;\n        var increasingRangeNegativeStep = start < stop && step < 0;\n        var decreasingRangePositiveStep = stop < start && step > 1;\n        if (sameStartStop || increasingRangeNegativeStep ||\n            decreasingRangePositiveStep) {\n            return tfjs_1.zeros([0], dtype);\n        }\n        if (stop < start && step === 1) {\n            // Auto adjust the step's sign if it hasn't been set\n            // (or was set to 1)\n            step = -1;\n        }\n        var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', dtype)];\n        var startTensor = tfjs_1.scalar(start);\n        var stopTensor = tfjs_1.scalar(stop);\n        var stepTensor = tfjs_1.scalar(step);\n        var res = backend.executeSingleOutput(tfjs_1.Range, opAttrs, [startTensor, stopTensor, stepTensor]);\n        var castedRes = res.cast(dtype);\n        startTensor.dispose();\n        stopTensor.dispose();\n        stepTensor.dispose();\n        res.dispose();\n        return castedRes;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}