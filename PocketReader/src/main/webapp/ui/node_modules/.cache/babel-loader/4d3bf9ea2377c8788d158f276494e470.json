{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.flipLeftRightConfig = {\n  kernelName: tfjs_core_1.FlipLeftRight,\n  backendName: 'tensorflow',\n  kernelFunc: function (_a) {\n    var inputs = _a.inputs,\n        backend = _a.backend;\n    var nodeBackend = backend;\n    var image = inputs.image;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', image.dtype)];\n    var axes = tfjs_core_1.util.parseAxisParam([2], image.shape);\n    var axisTensor = tfjs_core_1.tensor1d(axes, 'int32');\n    var res = nodeBackend.executeSingleOutput('ReverseV2', opAttrs, [image, axisTensor]);\n    axisTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/FlipLeftRight.js"],"names":["Object","defineProperty","exports","value","tfjs_core_1","require","nodejs_kernel_backend_1","flipLeftRightConfig","kernelName","FlipLeftRight","backendName","kernelFunc","_a","inputs","backend","nodeBackend","image","opAttrs","createTensorsTypeOpAttr","dtype","axes","util","parseAxisParam","shape","axisTensor","tensor1d","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,mBAAR,GAA8B;AAC1BC,EAAAA,UAAU,EAAEJ,WAAW,CAACK,aADE;AAE1BC,EAAAA,WAAW,EAAE,YAFa;AAG1BC,EAAAA,UAAU,EAAE,UAAUC,EAAV,EAAc;AACtB,QAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,QAAwBC,OAAO,GAAGF,EAAE,CAACE,OAArC;AACA,QAAIC,WAAW,GAAGD,OAAlB;AACA,QAAIE,KAAK,GAAGH,MAAM,CAACG,KAAnB;AACA,QAAIC,OAAO,GAAG,CACVX,uBAAuB,CAACY,uBAAxB,CAAgD,MAAhD,EAAwD,OAAxD,CADU,EAEVZ,uBAAuB,CAACY,uBAAxB,CAAgD,GAAhD,EAAqDF,KAAK,CAACG,KAA3D,CAFU,CAAd;AAIA,QAAIC,IAAI,GAAGhB,WAAW,CAACiB,IAAZ,CAAiBC,cAAjB,CAAgC,CAAC,CAAD,CAAhC,EAAqCN,KAAK,CAACO,KAA3C,CAAX;AACA,QAAIC,UAAU,GAAGpB,WAAW,CAACqB,QAAZ,CAAqBL,IAArB,EAA2B,OAA3B,CAAjB;AACA,QAAIM,GAAG,GAAGX,WAAW,CAACY,mBAAZ,CAAgC,WAAhC,EAA6CV,OAA7C,EAAsD,CAACD,KAAD,EAAQQ,UAAR,CAAtD,CAAV;AACAA,IAAAA,UAAU,CAACI,OAAX;AACA,WAAOF,GAAP;AACH;AAhByB,CAA9B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.flipLeftRightConfig = {\n    kernelName: tfjs_core_1.FlipLeftRight,\n    backendName: 'tensorflow',\n    kernelFunc: function (_a) {\n        var inputs = _a.inputs, backend = _a.backend;\n        var nodeBackend = backend;\n        var image = inputs.image;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32'),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', image.dtype),\n        ];\n        var axes = tfjs_core_1.util.parseAxisParam([2], image.shape);\n        var axisTensor = tfjs_core_1.tensor1d(axes, 'int32');\n        var res = nodeBackend.executeSingleOutput('ReverseV2', opAttrs, [image, axisTensor]);\n        axisTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}