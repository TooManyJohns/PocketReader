{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.argMinConfig = {\n  kernelName: tfjs_1.ArgMin,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var axis = args.attrs.axis;\n    var toDispose = [];\n    var xInput = x;\n\n    if (x.dtype === 'bool') {\n      xInput = x.toInt();\n      toDispose.push(xInput);\n    }\n\n    var axisScalar = tfjs_1.scalar(axis, 'int32');\n    toDispose.push(axisScalar);\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', xInput.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('output_type', 'int32')];\n    var res = backend.executeSingleOutput(tfjs_1.ArgMin, opAttrs, [xInput, axisScalar]);\n    toDispose.forEach(function (t) {\n      return t.dispose();\n    });\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/ArgMin.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","argMinConfig","kernelName","ArgMin","backendName","kernelFunc","args","x","inputs","backend","axis","attrs","toDispose","xInput","dtype","toInt","push","axisScalar","scalar","opAttrs","createTensorsTypeOpAttr","res","executeSingleOutput","forEach","t","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWD,IAAtB;AACA,QAAIE,SAAS,GAAG,EAAhB;AACA,QAAIC,MAAM,GAAGN,CAAb;;AACA,QAAIA,CAAC,CAACO,KAAF,KAAY,MAAhB,EAAwB;AACpBD,MAAAA,MAAM,GAAGN,CAAC,CAACQ,KAAF,EAAT;AACAH,MAAAA,SAAS,CAACI,IAAV,CAAeH,MAAf;AACH;;AACD,QAAII,UAAU,GAAGnB,MAAM,CAACoB,MAAP,CAAcR,IAAd,EAAoB,OAApB,CAAjB;AACAE,IAAAA,SAAS,CAACI,IAAV,CAAeC,UAAf;AACA,QAAIE,OAAO,GAAG,CACVnB,uBAAuB,CAACoB,uBAAxB,CAAgD,GAAhD,EAAqDP,MAAM,CAACC,KAA5D,CADU,EAEVd,uBAAuB,CAACoB,uBAAxB,CAAgD,MAAhD,EAAwD,OAAxD,CAFU,EAGVpB,uBAAuB,CAACoB,uBAAxB,CAAgD,aAAhD,EAA+D,OAA/D,CAHU,CAAd;AAKA,QAAIC,GAAG,GAAGZ,OAAO,CAACa,mBAAR,CAA4BxB,MAAM,CAACK,MAAnC,EAA2CgB,OAA3C,EAAoD,CAACN,MAAD,EAASI,UAAT,CAApD,CAAV;AACAL,IAAAA,SAAS,CAACW,OAAV,CAAkB,UAAUC,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACC,OAAF,EAAP;AAAqB,KAAtD;AACA,WAAOJ,GAAP;AACH;AAvBkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.argMinConfig = {\n    kernelName: tfjs_1.ArgMin,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var axis = args.attrs.axis;\n        var toDispose = [];\n        var xInput = x;\n        if (x.dtype === 'bool') {\n            xInput = x.toInt();\n            toDispose.push(xInput);\n        }\n        var axisScalar = tfjs_1.scalar(axis, 'int32');\n        toDispose.push(axisScalar);\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', xInput.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32'),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('output_type', 'int32')\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.ArgMin, opAttrs, [xInput, axisScalar]);\n        toDispose.forEach(function (t) { return t.dispose(); });\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}