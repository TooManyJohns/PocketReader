{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.sparseToDenseConfig = {\n  kernelName: tfjs_1.SparseToDense,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n        sparseIndices = _a.sparseIndices,\n        sparseValues = _a.sparseValues,\n        defaultValue = _a.defaultValue;\n    var backend = args.backend;\n    var outputShape = args.attrs.outputShape;\n    var opAttrs = [{\n      name: 'validate_indices',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: true\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', sparseValues.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tindices', sparseIndices.dtype)];\n    var outputShapeTensor = tfjs_1.tensor1d(outputShape, 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.SparseToDense, opAttrs, [sparseIndices, outputShapeTensor, sparseValues, defaultValue]);\n    outputShapeTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/SparseToDense.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","sparseToDenseConfig","kernelName","SparseToDense","backendName","kernelFunc","args","_a","inputs","sparseIndices","sparseValues","defaultValue","backend","outputShape","attrs","opAttrs","name","type","binding","TF_ATTR_BOOL","createTensorsTypeOpAttr","dtype","outputShapeTensor","tensor1d","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,mBAAR,GAA8B;AAC1BC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,aADO;AAE1BC,EAAAA,WAAW,EAAE,YAFa;AAG1BC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,MAAd;AAAA,QAAsBC,aAAa,GAAGF,EAAE,CAACE,aAAzC;AAAA,QAAwDC,YAAY,GAAGH,EAAE,CAACG,YAA1E;AAAA,QAAwFC,YAAY,GAAGJ,EAAE,CAACI,YAA1G;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACM,OAAnB;AACA,QAAIC,WAAW,GAAGP,IAAI,CAACQ,KAAL,CAAWD,WAA7B;AACA,QAAIE,OAAO,GAAG,CACV;AACIC,MAAAA,IAAI,EAAE,kBADV;AAEIC,MAAAA,IAAI,EAAEL,OAAO,CAACM,OAAR,CAAgBC,YAF1B;AAGItB,MAAAA,KAAK,EAAE;AAHX,KADU,EAMVG,uBAAuB,CAACoB,uBAAxB,CAAgD,GAAhD,EAAqDV,YAAY,CAACW,KAAlE,CANU,EAOVrB,uBAAuB,CAACoB,uBAAxB,CAAgD,UAAhD,EAA4DX,aAAa,CAACY,KAA1E,CAPU,CAAd;AASA,QAAIC,iBAAiB,GAAGxB,MAAM,CAACyB,QAAP,CAAgBV,WAAhB,EAA6B,OAA7B,CAAxB;AACA,QAAIW,GAAG,GAAGZ,OAAO,CAACa,mBAAR,CAA4B3B,MAAM,CAACK,aAAnC,EAAkDY,OAAlD,EAA2D,CAACN,aAAD,EAAgBa,iBAAhB,EAAmCZ,YAAnC,EAAiDC,YAAjD,CAA3D,CAAV;AACAW,IAAAA,iBAAiB,CAACI,OAAlB;AACA,WAAOF,GAAP;AACH;AApByB,CAA9B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.sparseToDenseConfig = {\n    kernelName: tfjs_1.SparseToDense,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, sparseIndices = _a.sparseIndices, sparseValues = _a.sparseValues, defaultValue = _a.defaultValue;\n        var backend = args.backend;\n        var outputShape = args.attrs.outputShape;\n        var opAttrs = [\n            {\n                name: 'validate_indices',\n                type: backend.binding.TF_ATTR_BOOL,\n                value: true\n            },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', sparseValues.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tindices', sparseIndices.dtype)\n        ];\n        var outputShapeTensor = tfjs_1.tensor1d(outputShape, 'int32');\n        var res = backend.executeSingleOutput(tfjs_1.SparseToDense, opAttrs, [sparseIndices, outputShapeTensor, sparseValues, defaultValue]);\n        outputShapeTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}