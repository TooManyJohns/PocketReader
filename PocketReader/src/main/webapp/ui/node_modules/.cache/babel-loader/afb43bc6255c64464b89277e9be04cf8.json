{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.cumsumConfig = {\n  kernelName: tfjs_1.Cumsum,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n        axis = _a.axis,\n        exclusive = _a.exclusive,\n        reverse = _a.reverse;\n    var axisTensor = tfjs_1.scalar(axis, 'int32');\n    var opAttrs = [{\n      name: 'exclusive',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: exclusive\n    }, {\n      name: 'reverse',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: reverse\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32')];\n    var res = backend.executeSingleOutput(tfjs_1.Cumsum, opAttrs, [x, axisTensor]);\n    axisTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Cumsum.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","cumsumConfig","kernelName","Cumsum","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","axis","exclusive","reverse","axisTensor","scalar","opAttrs","name","type","binding","TF_ATTR_BOOL","createTensorsTypeOpAttr","dtype","res","executeSingleOutput","dispose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,YAAR,GAAuB;AACnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,MADA;AAEnBC,EAAAA,WAAW,EAAE,YAFM;AAGnBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAd;AAAA,QAAqBC,IAAI,GAAGF,EAAE,CAACE,IAA/B;AAAA,QAAqCC,SAAS,GAAGH,EAAE,CAACG,SAApD;AAAA,QAA+DC,OAAO,GAAGJ,EAAE,CAACI,OAA5E;AACA,QAAIC,UAAU,GAAGjB,MAAM,CAACkB,MAAP,CAAcJ,IAAd,EAAoB,OAApB,CAAjB;AACA,QAAIK,OAAO,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,IAAI,EAAEV,OAAO,CAACW,OAAR,CAAgBC,YAA3C;AAAyDxB,MAAAA,KAAK,EAAEgB;AAAhE,KADU,EAEV;AAAEK,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAEV,OAAO,CAACW,OAAR,CAAgBC,YAAzC;AAAuDxB,MAAAA,KAAK,EAAEiB;AAA9D,KAFU,EAGVd,uBAAuB,CAACsB,uBAAxB,CAAgD,GAAhD,EAAqDf,CAAC,CAACgB,KAAvD,CAHU,EAIVvB,uBAAuB,CAACsB,uBAAxB,CAAgD,MAAhD,EAAwD,OAAxD,CAJU,CAAd;AAMA,QAAIE,GAAG,GAAGf,OAAO,CAACgB,mBAAR,CAA4B3B,MAAM,CAACK,MAAnC,EAA2Cc,OAA3C,EAAoD,CAACV,CAAD,EAAIQ,UAAJ,CAApD,CAAV;AACAA,IAAAA,UAAU,CAACW,OAAX;AACA,WAAOF,GAAP;AACH;AAjBkB,CAAvB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.cumsumConfig = {\n    kernelName: tfjs_1.Cumsum,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, axis = _a.axis, exclusive = _a.exclusive, reverse = _a.reverse;\n        var axisTensor = tfjs_1.scalar(axis, 'int32');\n        var opAttrs = [\n            { name: 'exclusive', type: backend.binding.TF_ATTR_BOOL, value: exclusive },\n            { name: 'reverse', type: backend.binding.TF_ATTR_BOOL, value: reverse },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32')\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.Cumsum, opAttrs, [x, axisTensor]);\n        axisTensor.dispose();\n        return res;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}