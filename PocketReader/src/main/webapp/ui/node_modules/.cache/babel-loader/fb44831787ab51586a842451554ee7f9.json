{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.stepConfig = {\n  kernelName: tfjs_1.Step,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var alpha = args.attrs.alpha;\n    var dtype = x.dtype;\n    return tfjs_1.tidy(function () {\n      var nans = tfjs_1.isNaN(x);\n      var stepNoNans = tfjs_1.where(tfjs_1.greater(x, tfjs_1.scalar(0, dtype)), tfjs_1.ones(x.shape), tfjs_1.fill(x.shape, alpha, dtype));\n      var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tfjs_1.backend_util.upcastType(x.dtype, stepNoNans.dtype))];\n      return backend.executeSingleOutput('Select', opAttrs, [nans, x, stepNoNans]);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Step.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","stepConfig","kernelName","Step","backendName","kernelFunc","args","x","inputs","backend","alpha","attrs","dtype","tidy","nans","isNaN","stepNoNans","where","greater","scalar","ones","shape","fill","opAttrs","createTensorsTypeOpAttr","backend_util","upcastType","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,UAAR,GAAqB;AACjBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,IADF;AAEjBC,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAYD,CAApB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWD,KAAvB;AACA,QAAIE,KAAK,GAAGL,CAAC,CAACK,KAAd;AACA,WAAOd,MAAM,CAACe,IAAP,CAAY,YAAY;AAC3B,UAAIC,IAAI,GAAGhB,MAAM,CAACiB,KAAP,CAAaR,CAAb,CAAX;AACA,UAAIS,UAAU,GAAGlB,MAAM,CAACmB,KAAP,CAAanB,MAAM,CAACoB,OAAP,CAAeX,CAAf,EAAkBT,MAAM,CAACqB,MAAP,CAAc,CAAd,EAAiBP,KAAjB,CAAlB,CAAb,EAAyDd,MAAM,CAACsB,IAAP,CAAYb,CAAC,CAACc,KAAd,CAAzD,EAA+EvB,MAAM,CAACwB,IAAP,CAAYf,CAAC,CAACc,KAAd,EAAqBX,KAArB,EAA4BE,KAA5B,CAA/E,CAAjB;AACA,UAAIW,OAAO,GAAG,CAACvB,uBAAuB,CAACwB,uBAAxB,CAAgD,GAAhD,EAAqD1B,MAAM,CAAC2B,YAAP,CAAoBC,UAApB,CAA+BnB,CAAC,CAACK,KAAjC,EAAwCI,UAAU,CAACJ,KAAnD,CAArD,CAAD,CAAd;AACA,aAAOH,OAAO,CAACkB,mBAAR,CAA4B,QAA5B,EAAsCJ,OAAtC,EAA+C,CAACT,IAAD,EAAOP,CAAP,EAAUS,UAAV,CAA/C,CAAP;AACH,KALM,CAAP;AAMH;AAdgB,CAArB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.stepConfig = {\n    kernelName: tfjs_1.Step,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var alpha = args.attrs.alpha;\n        var dtype = x.dtype;\n        return tfjs_1.tidy(function () {\n            var nans = tfjs_1.isNaN(x);\n            var stepNoNans = tfjs_1.where(tfjs_1.greater(x, tfjs_1.scalar(0, dtype)), tfjs_1.ones(x.shape), tfjs_1.fill(x.shape, alpha, dtype));\n            var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tfjs_1.backend_util.upcastType(x.dtype, stepNoNans.dtype))];\n            return backend.executeSingleOutput('Select', opAttrs, [nans, x, stepNoNans]);\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}