{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.addNConfig = {\n  kernelName: tfjs_1.AddN,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var tensors = args.inputs;\n    var backend = args.backend;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tensors[0].dtype), {\n      name: 'N',\n      type: backend.binding.TF_ATTR_INT,\n      value: tensors.length\n    }];\n    return backend.executeSingleOutput(tfjs_1.AddN, opAttrs, tensors);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/AddN.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","addNConfig","kernelName","AddN","backendName","kernelFunc","args","tensors","inputs","backend","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_INT","length","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AACAH,OAAO,CAACK,UAAR,GAAqB;AACjBC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,IADF;AAEjBC,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,OAAO,GAAGD,IAAI,CAACE,MAAnB;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,OAAO,GAAG,CACVV,uBAAuB,CAACW,uBAAxB,CAAgD,GAAhD,EAAqDJ,OAAO,CAAC,CAAD,CAAP,CAAWK,KAAhE,CADU,EAEV;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,IAAI,EAAEL,OAAO,CAACM,OAAR,CAAgBC,WAAnC;AAAgDnB,MAAAA,KAAK,EAAEU,OAAO,CAACU;AAA/D,KAFU,CAAd;AAIA,WAAOR,OAAO,CAACS,mBAAR,CAA4BpB,MAAM,CAACK,IAAnC,EAAyCO,OAAzC,EAAkDH,OAAlD,CAAP;AACH;AAXgB,CAArB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.addNConfig = {\n    kernelName: tfjs_1.AddN,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var tensors = args.inputs;\n        var backend = args.backend;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tensors[0].dtype),\n            { name: 'N', type: backend.binding.TF_ATTR_INT, value: tensors.length }\n        ];\n        return backend.executeSingleOutput(tfjs_1.AddN, opAttrs, tensors);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}