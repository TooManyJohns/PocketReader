{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nexports.imagConfig = {\n  kernelName: tfjs_1.Imag,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var input = args.inputs.input;\n    var backend = args.backend;\n    var opAttrs = [{\n      name: 'T',\n      type: backend.binding.TF_ATTR_TYPE,\n      value: backend.binding.TF_COMPLEX64\n    }, {\n      name: 'Tout',\n      type: backend.binding.TF_ATTR_TYPE,\n      value: backend.binding.TF_FLOAT\n    }];\n    var inputs = [input];\n    return backend.executeSingleOutput(tfjs_1.Imag, opAttrs, inputs);\n  }\n};","map":{"version":3,"sources":["/Users/johnlutz/Github/PocketReader/PocketReader/src/main/webapp/ui/node_modules/@tensorflow/tfjs-node/dist/kernels/Imag.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","imagConfig","kernelName","Imag","backendName","kernelFunc","args","input","inputs","backend","opAttrs","name","type","binding","TF_ATTR_TYPE","TF_COMPLEX64","TF_FLOAT","executeSingleOutput"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACAH,OAAO,CAACI,UAAR,GAAqB;AACjBC,EAAAA,UAAU,EAAEH,MAAM,CAACI,IADF;AAEjBC,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AACxB,QAAIC,KAAK,GAAGD,IAAI,CAACE,MAAL,CAAYD,KAAxB;AACA,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAnB;AACA,QAAIC,OAAO,GAAG,CACV;AACIC,MAAAA,IAAI,EAAE,GADV;AAEIC,MAAAA,IAAI,EAAEH,OAAO,CAACI,OAAR,CAAgBC,YAF1B;AAGIhB,MAAAA,KAAK,EAAEW,OAAO,CAACI,OAAR,CAAgBE;AAH3B,KADU,EAMV;AACIJ,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,IAAI,EAAEH,OAAO,CAACI,OAAR,CAAgBC,YAF1B;AAGIhB,MAAAA,KAAK,EAAEW,OAAO,CAACI,OAAR,CAAgBG;AAH3B,KANU,CAAd;AAYA,QAAIR,MAAM,GAAG,CAACD,KAAD,CAAb;AACA,WAAOE,OAAO,CAACQ,mBAAR,CAA4BlB,MAAM,CAACI,IAAnC,EAAyCO,OAAzC,EAAkDF,MAAlD,CAAP;AACH;AApBgB,CAArB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nexports.imagConfig = {\n    kernelName: tfjs_1.Imag,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var input = args.inputs.input;\n        var backend = args.backend;\n        var opAttrs = [\n            {\n                name: 'T',\n                type: backend.binding.TF_ATTR_TYPE,\n                value: backend.binding.TF_COMPLEX64\n            },\n            {\n                name: 'Tout',\n                type: backend.binding.TF_ATTR_TYPE,\n                value: backend.binding.TF_FLOAT\n            }\n        ];\n        var inputs = [input];\n        return backend.executeSingleOutput(tfjs_1.Imag, opAttrs, inputs);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}